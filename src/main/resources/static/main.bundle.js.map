{"version":3,"sources":["C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/$_lazy_route_resource lazy","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/app-material.module.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/app.component.html","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/app.component.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/app.module.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/add-book-dialog/add-book-dialog.component.html","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/add-book-dialog/add-book-dialog.component.scss","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/add-book-dialog/add-book-dialog.component.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/book-store.service.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/book.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/books-container.component.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/index.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/list/list.component.html","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/list/list.component.scss","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/list/list.component.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/master-detail/master-detail.component.html","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/master-detail/master-detail.component.scss","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/master-detail/master-detail.component.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/constants/app-const.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/login/index.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/login/login.component.css","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/login/login.component.html","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/login/login.component.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/billing-address.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/book.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/order.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/payment.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/shipping-address.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/shopping-cart.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/user-billing.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/user-payment.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/user-shipping.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/user.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/my-account/my-account.component.html","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/my-account/my-account.component.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/my-profile/my-profile.component.html","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/my-profile/my-profile.component.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/order-summary/order-summary.component.css","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/order-summary/order-summary.component.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/order-summary/success.html","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/order/order.component.css","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/order/order.component.html","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/order/order.component.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/safe.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/admin-book.service.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/cart.service.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/checkout.service.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/index.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/login.service.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/order.service.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/payment.service.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/shipping.service.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/upload-image.service.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/user.service.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/shopping-cart/shopping-cart.component.css","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/shopping-cart/shopping-cart.component.html","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/shopping-cart/shopping-cart.component.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/user-registration/user-registration.component.html","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/user-registration/user-registration.component.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/environments/environment.ts","C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport {\n  MatToolbarModule,\n  MatSidenavModule,\n  MatButtonModule,\n  MatIconModule,\n  MatListModule,\n  MatTabsModule,\n  MatProgressSpinnerModule,\n  MatCardModule,\n  MatInputModule,\n  MatDialogModule,\n  MatSnackBarModule,\n  MatSelectModule,\n  MatRadioModule,\n  MatCheckboxModule,\n  MatSlideToggleModule,\n  MatDatepickerModule,\n  MatNativeDateModule\n\n\n} from '@angular/material';\n\nconst MATERIAL_MODULES = [\nMatToolbarModule,\n  MatSidenavModule,\n  MatButtonModule,\n  MatIconModule,\n  MatListModule,\n  MatTabsModule,\n  MatProgressSpinnerModule,\n  MatCardModule,\n  MatInputModule,\n  MatDialogModule,\n  MatSnackBarModule,\n  MatSelectModule,\n  MatRadioModule,\n  MatCheckboxModule,\n  MatSlideToggleModule,\n  MatDatepickerModule,\n  MatNativeDateModule\n\n];\n\n@NgModule({\n  imports: MATERIAL_MODULES,\n  exports: MATERIAL_MODULES\n})\nexport class AppMaterialModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/app-material.module.ts","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex>\\n\\n  <mat-toolbar [hidden]=\\\"!loggedIn\\\" color=\\\"primary\\\">\\n    <button  mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\n      <mat-icon>menu</mat-icon>\\n    </button>\\n    <span>Book Store</span>\\n\\n <span class=\\\"spacer\\\"></span>\\n\\n\\n  <div class=\\\"btn-toolbar\\\">\\n  <div class=\\\"btn-group\\\">\\n\\n\\n   \\n    <button  [disabled]=\\\"!loggedIn\\\" mat-mini-fab routerLink=\\\"/shoppingCart\\\">\\n      <mat-icon>shopping_cart</mat-icon>\\n    </button>\\n\\n        <button  [disabled]=\\\"!loggedIn\\\" mat-mini-fab (click)=\\\"openAddBookDialog()\\\">\\n      <mat-icon>add</mat-icon>\\n    </button>\\n\\n     <button  [disabled]=\\\"loggedIn\\\" mat-mini-fab routerLink=\\\"/myAccount\\\">\\n      <mat-icon>supervisor_account</mat-icon>\\n    </button>\\n\\n  </div>\\n</div>\\n  \\n    <span [hidden]=\\\"loggedIn\\\"> <a mat-button routerLink=\\\"/login\\\">LogIn</a></span>   \\n\\n    <span [hidden]=\\\"!loggedIn\\\"> <a mat-button (click)=\\\"logout()\\\">Logout</a></span>  \\n\\n    \\n  </mat-toolbar>\\n\\n  <mat-sidenav-container fxFlex>\\n    <mat-sidenav mode=\\\"over\\\" #sidenav>\\n      <mat-nav-list>\\n        <a mat-list-item [href]=\\\"link.path\\\" *ngFor=\\\"let link of links\\\"> {{ link.name }} </a>\\n      </mat-nav-list>\\n    </mat-sidenav>\\n    <div class=\\\"content\\\" fxLayout=\\\"column\\\" fxFlex>\\n      <router-outlet></router-outlet>\\n    </div>\\n  </mat-sidenav-container>\\n\\n</div>\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component,OnInit } from '@angular/core';\nimport {MatDialog, MatSnackBar } from '@angular/material';\nimport { AddBookDialogComponent, BookStoreService } from './books';\nimport 'rxjs/add/operator/switchMap';\nimport {LoginService} from './services/login.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styles: [`\n  \n  mat-sidenav {\n    width: 300px;\n  }\n  `]\n})\nexport class AppComponent implements OnInit{\n  links = [\n  { name: 'Books', path: 'books' },\n  { name: 'My Profile', path: 'myProfile' }\n\n  ];\n  public loggedIn = false;\n\n\n  constructor(public router:Router, public loginService: LoginService, public dialog: MatDialog, public snackBar: MatSnackBar, public bookStoreService: BookStoreService) {\n  }\n\n  logout() {\n    this.loginService.logout().subscribe(\n      res => {\n        location.reload();\n      },\n      error => {\n        console.log(error);\n      }\n      );\n\n    this.router.navigate(['/']);\n  }\n\n  ngOnInit() {\n    this.loginService.checkSession().subscribe(\n      res => {\n        this.loggedIn=true;\n      },\n      error => {\n        this.loggedIn=false;\n\n   this.snackBar.open('You Should login to purchase Books', 'CLOSE', {\n     \n    });\n      }\n      );\n  }\n\n  openAddBookDialog() {\n    this.dialog.open(AddBookDialogComponent)\n    .afterClosed()\n  //  .filter(book => !!book)\n    .switchMap(book => this.bookStoreService.addBook(book))\n    .subscribe(result => {\n      if (result.ok) {\n        this.openSnackBar();\n      }\n    });\n  }\n\n  openSnackBar() {\n    this.snackBar.open('Book Added', 'CLOSE', {\n      duration: 1000\n    });\n  }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/app.component.ts","import { AppMaterialModule } from './app-material.module';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport 'hammerjs';\n\nimport { AppComponent } from './app.component';\nimport { UserRegistrationComponent } from './user-registration/user-registration.component';\nimport { MyAccountComponent } from './my-account/my-account.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { ShoppingCartComponent } from './shopping-cart/shopping-cart.component';\nimport { OrderComponent } from './order/order.component';\nimport { OrderSummaryComponent } from './order-summary/order-summary.component';\n\n\n\n\nimport { Safe } from './safe';\n\nimport { AdminBookService, UploadImageService, LoginService, CartService,\n  CheckoutService,\n  OrderService,\n  PaymentService,\n  ShippingService,\n  UserService} from './services';\n\n\n\n  import {\n    BookStoreService,\n    MasterDetailComponent,\n    ListComponent,\n    AddBookDialogComponent,\n    BooksContainerComponent\n  } from './books';\n  import {LoginComponent} from './login';\n\n  const routes: Routes = [\n  {path: '', redirectTo: 'books', pathMatch: 'full'},\n  {path: 'books', component: BooksContainerComponent },\n  {path: 'registration', component: UserRegistrationComponent },\n  {path: 'login', component: LoginComponent},\n  {path: 'myAccount',component: MyAccountComponent},\n  {path: 'myProfile',component: MyProfileComponent  },\n  {path: 'shoppingCart',component: ShoppingCartComponent },\n  {path: 'checkout',component: OrderComponent},\n  {path: 'orderSummary',component: OrderSummaryComponent}\n\n  ];\n\n\n\n\n\n  @NgModule({\n    declarations: [\n    AppComponent,\n    Safe,\n    MasterDetailComponent,\n    ListComponent,\n    AddBookDialogComponent,\n    BooksContainerComponent,\n    UserRegistrationComponent,\n    LoginComponent,\n    MyAccountComponent,\n    MyProfileComponent,\n    ShoppingCartComponent,\n    OrderComponent,\n    OrderSummaryComponent\n    ],\n    imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    AppMaterialModule,\n    RouterModule.forRoot(routes)\n    ],\n    providers: [BookStoreService, AdminBookService, UploadImageService, LoginService,CartService,\n    CheckoutService,OrderService,PaymentService,ShippingService,UserService],\n    entryComponents: [AddBookDialogComponent],\n    bootstrap: [AppComponent]\n  })\n  export class AppModule {\n  }\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/app.module.ts","module.exports = \"<h3>Add Book</h3>\\n<form #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" ngNativeValidate>\\n\\n  <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"8px\\\">\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\">\\n      <mat-input-container>\\n        <input matInput id=\\\"title\\\" type=\\\"text\\\" required [(ngModel)]=\\\"newBook.title\\\" name=\\\"title\\\" \\n        placeholder=\\\"Title\\\">\\n      </mat-input-container>\\n\\n\\n\\n      <mat-input-container>\\n        <input matInput id=\\\"author\\\" type=\\\"text\\\" required [(ngModel)]=\\\"newBook.author\\\" name=\\\"author\\\" placeholder=\\\"Author\\\">\\n      </mat-input-container>\\n\\n\\n      <mat-input-container>\\n        <input matInput id=\\\"publisher\\\" type=\\\"text\\\" required [(ngModel)]=\\\"newBook.publisher\\\" name=\\\"publisher\\\" placeholder=\\\"Publisher\\\">\\n      </mat-input-container>\\n\\n\\n </div>\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\">\\n\\n\\n\\n        <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker\\\"  id=\\\"publicationDate\\\"  required [(ngModel)]=\\\"newBook.publicationDate\\\" name=\\\"publicationDate\\\" placeholder=\\\"PublicationDate\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n        </mat-form-field>\\n      \\n\\n\\n\\n\\n\\n   <mat-input-container>\\n        <input matInput id=\\\"ourPrice\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBook.ourPrice\\\" name=\\\"ourPrice\\\" step=\\\"0.01\\\" placeholder=\\\"Our Price\\\">\\n      </mat-input-container>\\n\\n\\n\\n      <mat-input-container>\\n        <input matInput id=\\\"shippingWeight\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBook.shippingWeight\\\" name=\\\"shippingWeight\\\" step=\\\"0.01\\\" placeholder=\\\"Shipping Weight\\\">\\n      </mat-input-container>\\n   \\n      \\n\\n</div>\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\">\\n\\n      <mat-input-container>\\n        <input matInput id=\\\"pageNumber\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBook.numberOfPages\\\" name=\\\"numberOfPages\\\" step=\\\"1\\\" placeholder=\\\"Number of Pages\\\">\\n      </mat-input-container>\\n\\n      <mat-input-container>\\n        <input matInput id=\\\"isbn\\\" type=\\\"text\\\" required [(ngModel)]=\\\"newBook.isbn\\\" name=\\\"isbn\\\" placeholder=\\\"ISBN\\\">\\n      </mat-input-container>\\n\\n\\n\\n      <mat-input-container>\\n        <input matInput id=\\\"listPrice\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBook.listPrice\\\" name=\\\"listPrice\\\" step=\\\"0.01\\\" placeholder=\\\"List Price\\\">\\n      </mat-input-container>\\n\\n    </div>\\n<br>\\n\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\">\\n\\n   \\n\\n   <mat-select placeholder=\\\"Category\\\" id=\\\"category\\\" name=\\\"category\\\" [(ngModel)]=\\\"newBook.category\\\">\\n        <mat-option value=\\\"Management\\\">Management</mat-option>\\n        <mat-option value=\\\"Fiction\\\">Fiction</mat-option>\\n        <mat-option value=\\\"Engineering\\\">Engineering</mat-option>\\n        <mat-option value=\\\"Programming\\\">Programming</mat-option>\\n        <mat-option value=\\\"Arts &amp; Literature\\\">Arts &amp; Literature</mat-option>\\n      </mat-select>\\n\\n      <mat-select placeholder=\\\"Format\\\" id=\\\"format\\\" name=\\\"format\\\" [(ngModel)]=\\\"newBook.format\\\">\\n        <mat-option value=\\\"paperback\\\">Paperback</mat-option>\\n        <mat-option value=\\\"hardcover\\\">Hardcover</mat-option>\\n      </mat-select>\\n\\n\\n      <mat-select placeholder=\\\"Language\\\" id=\\\"language\\\" name=\\\"language\\\" [(ngModel)]=\\\"newBook.language\\\">\\n        <mat-option value=\\\"english\\\">English</mat-option>\\n        <mat-option value=\\\"spanish\\\">Spanish</mat-option>\\n      </mat-select>\\n</div>\\n<br>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\">\\n\\n      <mat-input-container>\\n        <input matInput id=\\\"inStockNumber\\\" type=\\\"number\\\" [(ngModel)]=\\\"newBook.inStockNumber\\\" name=\\\"inStockNumber\\\" step=\\\"0.01\\\" placeholder=\\\"Numbers In Stock\\\">\\n      </mat-input-container>\\n\\n\\n\\n\\n\\n      <mat-slide-toggle [color]=\\\"color\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [(ngModel)]=\\\"newBook.active\\\" name=\\\"active\\\">Active</mat-slide-toggle>\\n\\n</div>\\n<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"33px\\\">\\n\\n  <mat-input-container>\\n    <textarea matInput id=\\\"description\\\" [(ngModel)]=\\\"newBook.description\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" required></textarea>\\n  </mat-input-container>\\n</div>\\n\\n<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\">\\n  <input  id=\\\"tile\\\" type=\\\"file\\\" id=\\\"bookImage\\\" name=\\\"bookImage\\\" (change)=\\\"uploadImageService.fileChangeEvent($event)\\\">\\n  <br><br>\\n</div>\\n</div>\\n\\n<mat-dialog-actions align=\\\"end\\\">\\n  <button mat-button type=\\\"button\\\" (click)=\\\"dialogRef.close()\\\">Cancel</button>\\n  <button mat-button color=\\\"accent\\\"  mat-raised-button type=\\\"submit\\\">Save Book</button>\\n</mat-dialog-actions>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/add-book-dialog/add-book-dialog.component.html\n// module id = ../../../../../src/app/books/add-book-dialog/add-book-dialog.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".books-list-item {\\n  padding: 0 1rem 0.5rem;\\n  overflow-x: hidden;\\n  overflow-y: auto; }\\n\\n.books-list-item--coverimage {\\n  width: 150px;\\n  padding: 1rem; }\\n\\n.books-list-item--coverimage img {\\n    width: 100%; }\\n\\n.books-list-item--content {\\n  padding: 1rem 1rem 1rem 0; }\\n\\n.books-list-item--content h3 {\\n    margin-top: 0;\\n    margin-bottom: 0.875rem;\\n    font-size: 1.25rem;\\n    font-weight: 400; }\\n\\n.books-list-item--content p {\\n    margin-top: 0;\\n    font-size: 0.875rem;\\n    line-height: 150%; }\\n\\n.book-card {\\n  width: 160px;\\n  margin-bottom: 1.5rem; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/add-book-dialog/add-book-dialog.component.scss\n// module id = ../../../../../src/app/books/add-book-dialog/add-book-dialog.component.scss\n// module chunks = main","import { Component , OnInit , NgZone } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\n\nimport { Book } from '../../models/book';\nimport {AdminBookService} from '../../services/admin-book.service';\nimport {UploadImageService} from '../../services/upload-image.service';\n\n\n\n@Component({\n  selector: 'add-book-dialog',\n  styleUrls: ['./add-book-dialog.component.scss'],\n  templateUrl: './add-book-dialog.component.html'\n})\nexport class AddBookDialogComponent implements OnInit {\n\n  public newBook: Book = new Book();\n  public bookAdded: boolean;\t\n\n  constructor(public dialogRef: MatDialogRef<AddBookDialogComponent>,public Adminbookservice:AdminBookService,\n   public uploadImageService:UploadImageService,\n       public zone: NgZone) {}\n\n\n\n\nonSubmit() {\n\n  \tthis.Adminbookservice.sendBook(this.newBook).subscribe(\n\n  \t\tres => {\n\n  \t\t\tthis.uploadImageService.upload(JSON.parse(JSON.parse(JSON.stringify(res))._body).id);\n        \n\n  \t\t\tthis.bookAdded=true;\n  \t\t\tthis.newBook = new Book();\n  \t\t\tthis.newBook.active=true;\n  \t\t\tthis.newBook.category=\"Management\";\n  \t\t\tthis.newBook.language=\"english\";\n  \t\t\tthis.newBook.format=\"paperback\";\n\n  \t\t\tthis.dialogRef.close('Pizza!');\n  \t\t},\n  \t\terror => {\n  \t\t\tconsole.log(error);\n  \t\t}\n\t\t  \n  \t);\n  }\n\n\n  ngOnInit() {\n    this.dialogRef.updateSize('60%', '100%');\n\n  \tthis.bookAdded=false;\n  \tthis.newBook.active=true;\n  \tthis.newBook.category=\"Management\";\n  \tthis.newBook.language=\"english\";\n  \tthis.newBook.format=\"paperback\";\n  }\n\n\n\n\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/add-book-dialog/add-book-dialog.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/delay';\n\nimport { Book } from './book';\n\n@Injectable()\nexport class BookStoreService {\n\n  baseUrl = 'http://58e15045f7d7f41200261f77.mockapi.io/api/v1/books/';\n  headers = new Headers({'Content-Type': 'application/json'});\n\n  constructor(private http: Http) {\n  }\n\n  getBook(id: number): Observable<Book> {\n    const url = `${this.baseUrl}${id}`;\n    return this.http.get(url)\n      .map(response => response.json() as Book);\n  }\n\n  getBooks(): Observable<Book[]> {\n    const url = `${this.baseUrl}`;\n    return this.http.get(url)\n      .delay(5000)\n      .map(response => response.json() as Book[]);\n  }\n\n  addBook(book: Book) {\n    const url = `${this.baseUrl}`;\n    const body = JSON.stringify(book);\n    return this.http.post(url, body, {headers: this.headers})\n      .map(response => response);\n  }\n\n  deleteBook(id: number) {\n    const url = `${this.baseUrl}${id}`;\n    return this.http.delete(url, {headers: this.headers})\n      .map(response => response);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/book-store.service.ts","export class Book {\n  id: number;\n  isbn: number;\n  title: string;\n  authors: string;\n  published: string;\n  description: string;\n  coverImage: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/book.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'books-container',\n  template: `\n    <mat-tab-group>\n      <mat-tab label=\"Master Detail\">\n        <div fxFlex class=\"master-detail-container\">\n          <bl-master-detail fxFlex></bl-master-detail>\n        </div>\n      </mat-tab>\n      <mat-tab label=\"List\">\n        <div fxFlex class=\"books-list-container\">\n          <bl-list fxFlex></bl-list>\n        </div>\n      </mat-tab>\n    </mat-tab-group>\n  `,\n  styles: [`\n    .master-detail-container {\n      height: calc(100vh - 113px);\n      overflow: hidden;\n      padding: 1rem;\n    }\n\n    .books-list-container {\n      height: 100%;\n      padding: 1rem;\n      overflow-x: hidden;\n      overflow-y: auto;\n    }\n  `]\n})\nexport class BooksContainerComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/books-container.component.ts","import { Book } from './book';\nimport { BookStoreService } from './book-store.service';\nimport { MasterDetailComponent } from './master-detail/master-detail.component';\nimport { ListComponent } from './list/list.component';\nimport { AddBookDialogComponent } from './add-book-dialog/add-book-dialog.component';\nimport { BooksContainerComponent } from './books-container.component';\n\nexport {\n  Book,\n  BookStoreService,\n  MasterDetailComponent,\n  ListComponent,\n  AddBookDialogComponent,\n  BooksContainerComponent\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/index.ts","module.exports = \"<mat-progress-spinner color=\\\"accent\\\" mode=\\\"indeterminate\\\" [style.display]=\\\"spinnerVisibility\\\" class=\\\"spinner\\\">\\n</mat-progress-spinner>\\n<div fxLayout=\\\"column\\\" fxFlex *ngIf=\\\"booksList.length > 0 \\\">\\n  <h2 class=\\\"page-title\\\">Books List Page</h2>\\n  <section fxLayout=\\\"row\\\" fxLayoutWrap fxLayout.sm=\\\"column\\\" fxLayoutGap=\\\"16px\\\" fxLayoutAlign=\\\"center\\\">\\n    <mat-card class=\\\"book-card\\\" *ngFor=\\\"let book of booksList\\\">\\n      <img mat-card-image class=\\\"img-responsive\\\" src=\\\"{{serverPath}}/image/book/{{book.id}}.png\\\">\\n   \\n      <mat-card-title-group>\\n        <mat-card-title>{{book.title}}</mat-card-title>\\n        <mat-card-subtitle>{{book.author}}</mat-card-subtitle>\\n        \\n    </mat-card-title-group>\\n    </mat-card>\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/list/list.component.html\n// module id = ../../../../../src/app/books/list/list.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".book-card {\\n  width: 160px;\\n  margin-bottom: 1.5rem; }\\n\\n.wit {\\n  width: 150px;\\n  height: 120px; }\\n\\n.img-responsive {\\n  max-width: 200%;\\n  /* or to whatever you want here */\\n  height: 80%;\\n  /* or to whatever you want here */ }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/list/list.component.scss\n// module id = ../../../../../src/app/books/list/list.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Book } from '../../models/book';\nimport { AdminBookService } from '../../services/admin-book.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'bl-list',\n  styleUrls: ['./list.component.scss'],\n  templateUrl: './list.component.html'\n})\nexport class ListComponent implements OnInit {\n  booksList: Book[] = [];\n  selectedBook: Book;\n  spinnerVisibility = 'block';\n  serverPath='http://127.0.0.1:8181';\n\n  constructor(public adminbookservice: AdminBookService, public snackBar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    this.getBooks();\n  }\n\n  getBooks() {\n    this.adminbookservice\n      .getBookList()\n      .subscribe(response => {\n        this.booksList = response;\n        this.spinnerVisibility = 'none';\n      });\n  }\n\n  deleteBook(id: number) {\n    this.booksList = this.booksList.filter(book => book.id !== id);\n    this.adminbookservice.sendBookR(id)\n      .subscribe(result => {\n        if (result.ok) {\n          this.openSnackBar();\n        }\n        this.getBooks();\n      });\n  }\n\n  openSnackBar() {\n    this.snackBar.open('Book Deleted', 'CLOSE', {\n      duration: 1000\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/list/list.component.ts","module.exports = \"<mat-progress-spinner color=\\\"accent\\\" mode=\\\"indeterminate\\\" [style.display]=\\\"spinnerVisibility\\\" class=\\\"spinner\\\">\\n</mat-progress-spinner>\\n<div fxLayout=\\\"column\\\" fxFlex *ngIf=\\\"booksList.length > 0\\\">\\n  <h2 class=\\\"page-title\\\">Books List Master Detail Page</h2>\\n  <mat-sidenav-container flexLayout-=\\\"row\\\" fxFlex class=\\\"books-list\\\">\\n    <mat-sidenav mode=\\\"side\\\" opened>\\n      <mat-nav-list>\\n        <mat-list-item *ngFor=\\\"let book of booksList\\\" (click)=\\\"selectedBook = book\\\">\\n          <img mat-list-avatar src=\\\"{{serverPath}}/image/book/{{book.id}}.png\\\" />\\n\\n          <h2 mat-line>{{book.title}}</h2>\\n          <p mat-line> {{book.authors}} </p>\\n        </mat-list-item>\\n      </mat-nav-list>\\n    </mat-sidenav>\\n    <div class=\\\"books-list-item\\\" fxFlex>\\n      <div *ngIf=\\\"selectedBook\\\" class=\\\"books-list-item--detail\\\" fxLayout=\\\"row\\\" fxFlex.sm=\\\"column\\\">\\n        <div class=\\\"books-list-item--coverimage\\\">\\n          <img src=\\\"{{serverPath}}/image/book/{{selectedBook.id}}.png\\\" />\\n        </div>\\n        <div class=\\\"books-list-item--content\\\" fxFlex>\\n          <h3>{{selectedBook.title}}</h3>\\n          <p>{{selectedBook.authors}}</p>\\n          <p>{{selectedBook.published}}</p>\\n          <p>ISBN: {{selectedBook.isbn}}</p>\\n          <p>{{selectedBook.description}}</p>\\n\\n          <h4>Our Price: <span style=\\\"color: #db3208;\\\">$<span>\\n            {{selectedBook.ourPrice | number : '1.2-2'}}\\n          </span></span></h4>\\n          <p>List Price: <span style=\\\"text-decoration:line-through;\\\">$<span>{{selectedBook.listPrice | number : '1.2-2'}}</span></span>\\n          </p>\\n          <p>You Save: $<span>{{selectedBook.listPrice-book | number : '1.2-2'}}</span></p>\\n          <span>Qty: </span>\\n          <select [(ngModel)]=\\\"qty\\\" class=\\\"browser-default\\\" style=\\\"width:50px; display:inline;\\\">\\n            <option *ngFor=\\\"let x of numberList\\\" [ngValue]=\\\"x\\\">{{x}}</option>\\n          </select>\\n\\n\\n          <h4 *ngIf=\\\"selectedBook?.inStockNumber>10\\\" style=\\\"color:green;\\\">In Stock</h4>\\n          <h4 *ngIf=\\\"selectedBook?.inStockNumber<10 && selectedBook.inStockNumber>0\\\" style=\\\"color:green;\\\">Only <span>{{book?.inStockNumber}}</span> In Stock</h4>\\n          <h4 *ngIf=\\\"selectedBook?.inStockNumber==0\\\" style=\\\"color:darkred;\\\">Unavailable</h4>\\n          <button  mat-raised-button [disabled]=\\\"selectedBook?.inStockNumber==0||!loggedIn\\\" (click)=\\\"onAddToCart()\\\" class=\\\"mat-primary\\\">Add to Cart</button>\\n\\n\\n\\n        </div>\\n      </div>\\n    </div>\\n  </mat-sidenav-container>\\n\\n\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/master-detail/master-detail.component.html\n// module id = ../../../../../src/app/books/master-detail/master-detail.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".books-list {\\n  background: #ffffff;\\n  -webkit-box-shadow: 0 0 1px rgba(0, 0, 0, 0.15);\\n          box-shadow: 0 0 1px rgba(0, 0, 0, 0.15); }\\n\\nmd-sidenav {\\n  width: 300px;\\n  border-right: 1px solid rgba(0, 0, 0, 0.04); }\\n\\nmd-nav-list {\\n  padding-top: 0; }\\n\\nmd-nav-list h2 {\\n    font-size: 0.875rem !important; }\\n\\nmd-nav-list p {\\n    font-size: 0.75rem !important; }\\n\\n.books-list-item {\\n  padding: 0 1rem 0.5rem;\\n  overflow-x: hidden;\\n  overflow-y: auto; }\\n\\n.books-list-item--detail {\\n  /*box-shadow: 0 3px 1px -2px rgba(0, 0, 0, .2), 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12);*/ }\\n\\n.books-list-item--coverimage {\\n  width: 150px;\\n  padding: 1rem; }\\n\\n.books-list-item--coverimage img {\\n    width: 100%; }\\n\\n.books-list-item--content {\\n  padding: 1rem 1rem 1rem 0; }\\n\\n.books-list-item--content h3 {\\n    margin-top: 0;\\n    margin-bottom: 0.875rem;\\n    font-size: 1.25rem;\\n    font-weight: 400; }\\n\\n.books-list-item--content p {\\n    margin-top: 0;\\n    font-size: 0.875rem;\\n    line-height: 150%; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/master-detail/master-detail.component.scss\n// module id = ../../../../../src/app/books/master-detail/master-detail.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Book } from '../../models/book';\nimport { AdminBookService } from '../../services/admin-book.service';\nimport {Http} from '@angular/http';\nimport {AppConst} from '../../constants/app-const';\nimport { CartService } from '../../services/cart.service';\nimport {Params, ActivatedRoute, Router} from '@angular/router';\nimport {LoginService} from '../../services/login.service';\n\n\n@Component({\n  selector: 'bl-master-detail',\n  styleUrls: ['./master-detail.component.scss'],\n  templateUrl: './master-detail.component.html'\n})\nexport class MasterDetailComponent implements OnInit {\n  booksList: Book[] = [];\n  selectedBook: Book;\n  spinnerVisibility = 'block';\n  serverPath='http://127.0.0.1:8181';\n  public numberList: number[] = [1,2,3,4,5,6,7,8,9];\n  public qty: number;\n\n  public addBookSuccess: boolean = false;\n  public notEnoughStock:boolean = false;\n\npublic loggedIn:boolean=false;\n\n\n\n  constructor(public adminbookservice: AdminBookService,\n    public cartService: CartService,\n    public router:Router,\n    public http:Http,\n    public route:ActivatedRoute,\n    public loginservice:LoginService\n    ) { }\n\n\n  onAddToCart() {\n    this.cartService.addItem(this.selectedBook.id, this.qty).subscribe(\n      res => {\n        console.log(res.text());\n        this.addBookSuccess=true;\n      },\n      err => {\n        console.log(err.text());\n        this.notEnoughStock=true;\n      }\n    );\n  }\n\n\n  ngOnInit() {\n  this.loginservice.checkSession().subscribe(\n      res => {\n        this.loggedIn=true;\n      },\n      error => {\n        this.loggedIn=false;\n      }\n    );\n\n\n\n    this.adminbookservice\n      .getBookList()\n      .subscribe(response => {\n        this.booksList = response;\n        this.spinnerVisibility = 'none';\n      });\n        this.qty = 1;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/books/master-detail/master-detail.component.ts","export class AppConst {\n\tpublic static serverPath = 'http://127.0.0.1:8181';\n\n\tpublic static usStates = {\n\t\t\"AL\": \"Alabama\",\n\t\t\"AK\": \"Alaska\",\n\t\t\"AS\": \"American Samoa\",\n\t\t\"AZ\": \"Arizona\",\n\t\t\"AR\": \"Arkansas\",\n\t\t\"CA\": \"California\",\n\t\t\"CO\": \"Colorado\",\n\t\t\"CT\": \"Connecticut\",\n\t\t\"DE\": \"Delaware\",\n\t\t\"DC\": \"District Of Columbia\",\n\t\t\"FM\": \"Federated States Of Micronesia\",\n\t\t\"FL\": \"Florida\",\n\t\t\"GA\": \"Georgia\",\n\t\t\"GU\": \"Guam\",\n\t\t\"HI\": \"Hawaii\",\n\t\t\"ID\": \"Idaho\",\n\t\t\"IL\": \"Illinois\",\n\t\t\"IN\": \"Indiana\",\n\t\t\"IA\": \"Iowa\",\n\t\t\"KS\": \"Kansas\",\n\t\t\"KY\": \"Kentucky\",\n\t\t\"LA\": \"Louisiana\",\n\t\t\"ME\": \"Maine\",\n\t\t\"MH\": \"Marshall Islands\",\n\t\t\"MD\": \"Maryland\",\n\t\t\"MA\": \"Massachusetts\",\n\t\t\"MI\": \"Michigan\",\n\t\t\"MN\": \"Minnesota\",\n\t\t\"MS\": \"Mississippi\",\n\t\t\"MO\": \"Missouri\",\n\t\t\"MT\": \"Montana\",\n\t\t\"NE\": \"Nebraska\",\n\t\t\"NV\": \"Nevada\",\n\t\t\"NH\": \"New Hampshire\",\n\t\t\"NJ\": \"New Jersey\",\n\t\t\"NM\": \"New Mexico\",\n\t\t\"NY\": \"New York\",\n\t\t\"NC\": \"North Carolina\",\n\t\t\"ND\": \"North Dakota\",\n\t\t\"MP\": \"Northern Mariana Islands\",\n\t\t\"OH\": \"Ohio\",\n\t\t\"OK\": \"Oklahoma\",\n\t\t\"OR\": \"Oregon\",\n\t\t\"PW\": \"Palau\",\n\t\t\"PA\": \"Pennsylvania\",\n\t\t\"PR\": \"Puerto Rico\",\n\t\t\"RI\": \"Rhode Island\",\n\t\t\"SC\": \"South Carolina\",\n\t\t\"SD\": \"South Dakota\",\n\t\t\"TN\": \"Tennessee\",\n\t\t\"TX\": \"Texas\",\n\t\t\"UT\": \"Utah\",\n\t\t\"VT\": \"Vermont\",\n\t\t\"VI\": \"Virgin Islands\",\n\t\t\"VA\": \"Virginia\",\n\t\t\"WA\": \"Washington\",\n\t\t\"WV\": \"West Virginia\",\n\t\t\"WI\": \"Wisconsin\",\n\t\t\"WY\": \"Wyoming\"\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/constants/app-const.ts","import { LoginComponent } from './login.component';\n\n\n\nexport {\n  LoginComponent\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/login/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".app-content{\\n\\n\\n}\\n\\n.app-input-icon {\\n  font-size: 16px;\\n}\\n\\nform {\\n  width: 220px;\\n  margin: 4em auto;\\n  padding: 3em 2em 2em 2em;\\n  background: #fafafa;\\n  border: 1px solid #ebebeb;\\n  -webkit-box-shadow: rgba(0,0,0,0.14902) 0px 1px 1px 0px,rgba(0,0,0,0.09804) 0px 1px 2px 0px;\\n          box-shadow: rgba(0,0,0,0.14902) 0px 1px 1px 0px,rgba(0,0,0,0.09804) 0px 1px 2px 0px;\\n\\n}\\n\\n.group {\\n  position: relative;\\n  margin-bottom: 45px;\\n\\n}\\n\\n.corner-ribbon{\\n  width: 200px;\\n  background: #e43;\\n  position: absolute;\\n  top: 25px;\\n  left: -50px;\\n  text-align: center;\\n  line-height: 50px;\\n  letter-spacing: 1px;\\n  color: #f0f0f0;\\n  transform: rotate(-45deg);\\n  -webkit-transform: rotate(-45deg);\\n}\\n\\n/* Custom styles */\\n\\n.corner-ribbon.sticky{\\n  position: fixed;\\n}\\n\\n.corner-ribbon.shadow{\\n  -webkit-box-shadow: 0 0 3px rgba(0,0,0,.3);\\n          box-shadow: 0 0 3px rgba(0,0,0,.3);\\n}\\n\\n/* positions */\\n\\n.corner-ribbon.top-right{\\n  top: 25px;\\n  right: -50px;\\n  left: auto;\\n  transform: rotate(45deg);\\n  -webkit-transform: rotate(45deg);\\n}\\n\\n#err {\\n  color : red;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = main","module.exports = \"\\n\\n<div class=\\\"app-content\\\">\\n\\t<a  target=\\\"blank\\\">\\n\\t\\t<img style=\\\"position: absolute; top: 0; right: 0; border: 0;\\\" data-canonical-src=\\\"https://s3.amazonaws.com/github/ribbons/forkme_right_green_007200.png\\\">\\n\\t</a>\\n\\t<div  [hidden]=\\\"loggedIn\\\" class=\\\"group\\\">\\n\\n\\t\\t<form role=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\"><br>\\n\\t\\t\\t<mat-input-container>\\n\\t\\t\\t\\t<input type=\\\"text\\\" matInput [(ngModel)]=\\\"credential.username\\\" name=\\\"username\\\" id='username' placeholder=\\\"Your Username\\\">\\n\\t\\t\\t\\t<mat-placeholder>\\n\\t\\t\\t\\t\\t<i class=\\\"material-icons app-input-icon\\\">face</i>Username\\n\\t\\t\\t\\t</mat-placeholder>\\n\\t\\t\\t</mat-input-container><br><br>\\n\\t\\t\\t<mat-input-container>\\n\\t\\t\\t\\t<input type=\\\"password\\\" matInput [(ngModel)]=\\\"credential.password\\\" name=\\\"password\\\" id='password' placeholder=\\\"Your Password\\\">\\n\\t\\t\\t\\t<mat-placeholder >\\n\\t\\t\\t\\t\\t<i class=\\\"material-icons app-input-icon\\\">lock_open</i>Password\\n\\t\\t\\t\\t</mat-placeholder>\\n\\t\\t\\t</mat-input-container><br><br>\\n\\t\\t\\t<button mat-raised-button color=\\\"warn\\\" type=\\\"submit\\\" name=\\\"action\\\">LOGIN</button><br><br>\\n\\t\\t\\t<span id=\\\"err\\\"><small></small></span>\\n\\t\\t\\t<mat-slide-toggle color=\\\"primary\\\"><small>Remember me!</small></mat-slide-toggle>\\n\\t\\t</form >\\n\\t</div>\\n\\t<div [hidden]=\\\"!loggedIn\\\">\\n\\t\\t<h2>You have logged in with Success!</h2>\\n\\t</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {LoginService} from '.././services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public credential = {'username':'', 'password' : ''};\n  public loggedIn = false;\n\n  constructor(public loginService: LoginService) { }\n\n  onSubmit() {\n  \tthis.loginService.sendCredential(this.credential.username, this.credential.password).subscribe(\n  \t\tres => {\n  \t\t\tconsole.log(res);\n  \t\t\tlocalStorage.setItem(\"xAuthToken\", res.json().token);\n  \t\t\tthis.loggedIn = true;\n  \t\t\tlocation.reload();\n  \t\t},\n  \t\terror => {\n  \t\t\tconsole.log(error);\n  \t\t}\n  \t);\n  }\n\n  ngOnInit() {\n  \tthis.loginService.checkSession().subscribe(\n  \t\tres => {\n  \t\t\tthis.loggedIn=true;\n  \t\t},\n  \t\terror => {\n  \t\t\tthis.loggedIn=false;\n  \t\t}\n  \t);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/login/login.component.ts","import {Order} from './order';\n\nexport class BillingAddress {\n\tpublic id: number;\n\tpublic billingAddressName: string;\n\tpublic billingAddressStreet1: string;\n\tpublic billingAddressStreet2: string;\n\tpublic billingAddressCity: string;\n\tpublic billingAddressState: string;\n\tpublic billingAddressCountry: string;\n\tpublic billingAddressZipcode: string;\n\tpublic order: Order;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/billing-address.ts","export class Book {\n\tpublic id: number;\n\tpublic title: string;\n\tpublic author: string;\n\tpublic publisher: string;\n\tpublic publicationDate: string;\n\tpublic language: string;\n\tpublic category: string;\n\tpublic numberOfPages: number;\n\tpublic format: string;\n\tpublic isbn: string;\n\tpublic shippingWeight: number;\n\tpublic listPrice: number;\n\tpublic ourPrice: number;\n\tpublic active: boolean;\n\tpublic description: string;\n\tpublic inStockNumber: number;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/book.ts","import {CartItem} from './cart-item';\n\nexport class Order {\n\n\tpublic id: number;\n\tpublic orderDate: string;\n\tpublic shippingDate: string;\n\tpublic shippingMethod: string;\n\tpublic orderStatus: string;\n\tpublic orderTotal: number;\n\tpublic cartItemList: CartItem[];\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/order.ts","import {BillingAddress} from './billing-address';\n\nexport class Payment {\n\tpublic id: number;\n\tpublic type: string;\n\tpublic cardName: string;\n\tpublic cardNumber: string;\n\tpublic expiryMonth: string;\n\tpublic expiryYear: string;\n\tpublic cvc: number;\n\tpublic holderName: string;\n\tpublic defaultPayment: boolean;\n\tpublic billingAddress: BillingAddress;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/payment.ts","import {Order} from './order';\n\nexport class ShippingAddress {\n\tpublic id: number;\n\tpublic shippingAddressName: string;\n\tpublic shippingAddressStreet1: string;\n\tpublic shippingAddressStreet2: string;\n\tpublic shippingAddressCity: string;\n\tpublic shippingAddressState: string;\n\tpublic shippingAddressCountry: string;\n\tpublic shippingAddressZipcode: string;\n\tpublic shippingAddressDefault: boolean;\n\tpublic order: Order;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/shipping-address.ts","import {User} from './user';\n\nexport class ShoppingCart {\n\tpublic id: number;\n\tpublic grandTotal: number;\n\tpublic user: User;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/shopping-cart.ts","export class UserBilling {\n\tpublic id: number;\n\tpublic userBillingName: string;\n\tpublic userBillingStreet1: string;\n\tpublic userBillingStreet2: string;\n\tpublic userBillingCity: string;\n\tpublic userBillingState: string;\n\tpublic userBillingCountry: string;\n\tpublic userBillingZipcode: string;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/user-billing.ts","import {UserBilling} from './user-billing';\n\nexport class UserPayment {\n\tpublic id: number;\n\tpublic type: string;\n\tpublic cardName: string;\n\tpublic cardNumber: string;\n\tpublic expiryMonth: string;\n\tpublic expiryYear: string;\n\tpublic cvc: number;\n\tpublic holderName: string;\n\tpublic defaultPayment: boolean;\n\tpublic userBilling: UserBilling;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/user-payment.ts","export class UserShipping {\n\tpublic id: number;\n\tpublic userShippingName: string;\n\tpublic userShippingStreet1: string;\n\tpublic userShippingStreet2: string;\n\tpublic userShippingCity: string;\n\tpublic userShippingState: string;\n\tpublic userShippingCountry: string;\n\tpublic userShippingZipcode: string;\n\tpublic userShippingDefault: boolean;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/user-shipping.ts","import {UserPayment} from './user-payment';\nimport {UserShipping} from './user-shipping';\n\nexport class User {\n\tpublic id: number;\n\tpublic firstName: string;\n\tpublic lastName: string;\n\tpublic username: string;\n\tpublic password: string;\n\tpublic email: string\n\tpublic phone: string;\n\tpublic enabled: boolean;\n\tpublic userPaymentList: UserPayment[];\n\tpublic userShippingList: UserShipping[];\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/models/user.ts","module.exports = \"\\n\\n\\t\\t\\t\\t\\t\\t<mat-tab-group>\\n\\t\\t\\t\\t\\t\\t\\t<br><br>\\n\\t\\t\\t\\t\\t\\t\\t<mat-tab label=\\\"Login\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex class=\\\"master-detail-container\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<br><br>\\t<br><br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loginError\\\" style=\\\"color:red;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tIncorrect username or password.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<form role=\\\"form\\\" (ngSubmit)=\\\"onLogin()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-input-container fxFlex>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for =\\\"username\\\">Username *</label>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input  matInput id=\\\"username\\\" name=\\\"username\\\" [(ngModel)]=\\\"credential.username\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-input-container>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-input-container fxFlex>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for =\\\"password\\\">Password *</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput type=\\\"password\\\"  id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"credential.password\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-input-container>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br><br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlexAlign=\\\"end\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" class=\\\"mat-primary\\\">Log In</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</mat-tab>\\n\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t<mat-tab label=\\\"New Account\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex class=\\\"master-detail-container\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<br><br>\\t<br><br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"alert alert-info\\\" *ngIf=\\\"emailSent\\\">An email has been sent to the email address you just registered. Please validate your email adderss and update your password info.</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<form (ngSubmit)=\\\"onNewAccount()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-input-container fxFlex>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"newUsername\\\">Username *</label>&nbsp;<span *ngIf=\\\"usernameExists\\\" style=\\\"color:red;\\\">Username already exists. Choose a different one.</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" matInput  id=\\\"newUsername\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\" required=\\\"required\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-input-container>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-input-container fxFlex>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"email\\\">Email Address *</label>&nbsp;<span *ngIf=\\\"emailExists\\\" style=\\\"color:red;\\\">Email already exists. Choose a different one.</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"email\\\" matInput  id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" required=\\\"required\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-input-container>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlexAlign=\\\"end\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" class=\\\"mat-primary\\\">Create new account</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</mat-tab>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\n\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t<mat-tab label=\\\"Forget Password\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlex class=\\\"master-detail-container\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<br><br>\\t<br><br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"alert alert-warning\\\" *ngIf=\\\"emailNotExists\\\">Email doesn't exists.</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"alert alert-success\\\" *ngIf=\\\"forgetPasswordEmailSent\\\">Email sent.</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<form (ngSubmit)=\\\"onForgetPassword()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-input-container fxFlex>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label style=\\\"color:#828282;\\\" for=\\\"recoverEmail\\\">Enter your registered email address*</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"email\\\" class=\\\"form-control\\\" matInput id=\\\"recoverEmail\\\" name=\\\"recoverEmail\\\" [(ngModel)]=\\\"recoverEmail\\\" required=\\\"required\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-input-container>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div fxFlexAlign=\\\"end\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" class=\\\"mat-primary\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</mat-tab>\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t<br><br>\\t<br><br>\\n\\t\\t\\t\\t\\t\\t</mat-tab-group>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/my-account/my-account.component.html\n// module id = ../../../../../src/app/my-account/my-account.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {LoginService} from '.././services/login.service';\nimport {UserService} from '.././services/user.service';\nimport {AppConst} from '.././constants/app-const';\n\n@Component({\n  selector: 'app-my-account',\n  templateUrl: './my-account.component.html',\n  styles: [`\n    .master-detail-container {\n      height: calc(100vh - 113px);\n      overflow: hidden;\n      padding: 1rem;\n    }\n  `]\n})\nexport class MyAccountComponent implements OnInit {\n\n  public serverPath = AppConst.serverPath;\n  public loginError:boolean = false;\n  public loggedIn = false;\n  public credential = {'username':'', 'password':''};\n\n  public emailSent: boolean =false;\n  public usernameExists:boolean;\n  public emailExists:boolean;\n  public username:string;\n  public email:string;\n\n  public emailNotExists: boolean =false;\n  public forgetPasswordEmailSent: boolean;\n  public recoverEmail:string;  \n\n  constructor(\n  \tpublic loginService: LoginService,\n  \tpublic userService: UserService,\n  \tpublic router: Router\n  \t) { }\n\n  onLogin() {\n  \tthis.loginService.sendCredential(this.credential.username, this.credential.password).subscribe(\n  \t\tres => {\n  \t\t\tconsole.log(res);\n  \t\t\tlocalStorage.setItem(\"xAuthToken\", res.json().token);\n  \t\t\tthis.loggedIn = true;\n  \t\t\tlocation.reload();\n  \t\t\tthis.router.navigate(['/home']);\n  \t\t}, \n  \t\terror => {\n  \t\t\tthis.loggedIn = false;\n  \t\t\tthis.loginError = true;\n  \t\t}\n  \t);\n  }\n\n  onNewAccount() {\n  \tthis.usernameExists = false;\n  \tthis.emailExists = false;\n  \tthis.emailSent = false;\n\n  \tthis.userService.newUser(this.username, this.email).subscribe(\n  \t\tres => {\n  \t\t\tconsole.log(res);\n  \t\t\tthis.emailSent = true;\n  \t\t}, \n  \t\terror => {\n  \t\t\tconsole.log(error.text());\n  \t\t\tlet errorMessage = error.text();\n  \t\t\tif(errorMessage===\"usernameExists\") this.usernameExists=true;\n  \t\t\tif(errorMessage===\"emailExists\") this.emailExists=true;\n  \t\t}\n  \t);\n  }\n\n  onForgetPassword() {\n  \tthis.forgetPasswordEmailSent = false;\n  \tthis.emailNotExists = false;\n\n  \tthis.userService.retrievePassword(this.recoverEmail).subscribe(\n  \t\tres => {\n  \t\t\tconsole.log(res);\n  \t\t\tthis.forgetPasswordEmailSent = true;\n  \t\t},\n  \t\terror => {\n  \t\t\tconsole.log(error.text());\n  \t\t\tlet errorMessage = error.text();\n  \t\t\tif(errorMessage===\"Email not found\") this.emailNotExists=true;\n  \t\t}\n  \t);\n  }\n\n  ngOnInit() {\n  \tthis.loginService.checkSession().subscribe(\n  \t\tres => {\n  \t\t\tthis.loggedIn = true;\n  \t\t},\n  \t\terror => {\n  \t\t\tthis.loggedIn = false;\n  \t\t}\n  \t);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/my-account/my-account.component.ts","module.exports = \"\\n<mat-tab-group [selectedIndex]=\\\"selectedProfileTab\\\">\\n    <mat-tab label=\\\"Edit\\\">\\n        <div fxFlex class=\\\"master-detail-container\\\">\\n            <br><br>    <br><br>\\n            <div style=\\\"margin-top: 20px;\\\">\\n                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"incorrectPassword\\\">\\n                    <strong>Incorrect Password!</strong> Please enter the correct password for the current user.\\n                </div>\\n                <div class=\\\"alert alert-success\\\" *ngIf=\\\"updateSuccess\\\">\\n                    <strong>Update Success!</strong>\\n                </div>\\n            </div>\\n\\n            <form (ngSubmit)=\\\"onUpdateUserInfo()\\\">\\n                <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"8px\\\">\\n\\n\\n                    <input type=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"user.id\\\" />\\n                    <div class=\\\"bg-info\\\" *ngIf=\\\"updateUserInfo\\\">User info updated.</div>\\n\\n\\n\\n                    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\">\\n                        <mat-input-container fxFlex>\\n\\n                            <label style=\\\"color:blue;\\\" for=\\\"firstName\\\">First Name*</label>\\n                            <input type=\\\"text\\\" matInput id=\\\"firstName\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"user.firstName\\\" />\\n                        </mat-input-container>\\n                        <mat-input-container fxFlex>\\n\\n                            <label style=\\\"color:blue;\\\" for=\\\"lastName\\\">Last Name*</label>\\n                            <input type=\\\"text\\\" matInput id=\\\"lastName\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"user.lastName\\\" />\\n\\n                        </mat-input-container>\\n\\n\\n\\n                        <mat-input-container fxFlex>\\n\\n                            <label style=\\\"color:blue;\\\" for=\\\"username\\\">\\n                                Username *\\n                            </label>&nbsp;<span *ngIf=\\\"usernameExists\\\" style=\\\"color:red\\\">Username already exists. Choose a different one.</span>\\n\\n\\n\\n                            <input required=\\\"required\\\" type=\\\"text\\\" matInput id=\\\"username\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" />\\n                        </mat-input-container>\\n                    </div>\\n\\n\\n                    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\">\\n                       <mat-input-container fxFlex>\\n\\n                        <label  style=\\\"color:blue;\\\" for=\\\"currentPassword\\\" >\\n                            Current Password\\n                        </label>\\n                        <input type=\\\"password\\\" matInput id=\\\"password\\\"  required   name=\\\"password\\\" [(ngModel)]=\\\"currentPassword\\\" />\\n   \\n                    </mat-input-container>\\n\\n                \\n\\n                    <mat-input-container fxFlex>\\n                        <label style=\\\"color:blue;\\\" for=\\\"email\\\">\\n                            Email Address *\\n                        </label>&nbsp;<span *ngIf=\\\"emailExists\\\" style=\\\"color:red\\\">Email already exists. Choose a different one.</span>\\n                        <input required=\\\"required\\\" type=\\\"email\\\" matInput id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" />\\n                    </mat-input-container>\\n                </div>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\">\\n                   <mat-input-container fxFlex>\\n                    <label style=\\\"color:blue;\\\" for=\\\"txtNewPassword\\\">\\n                        New Password *\\n                    </label>&nbsp;<span id=\\\"checkPasswordMatch\\\" style=\\\"color:red;\\\"></span>\\n                    <input type=\\\"password\\\" matInput id=\\\"txtNewPassword\\\" name=\\\"txtNewPassword\\\" [(ngModel)]=\\\"newPassword\\\" />\\n                </mat-input-container>\\n                <mat-input-container fxFlex>\\n\\n                    <label style=\\\"color:blue;\\\" for=\\\"txtConfirmPassword\\\">\\n                        Confirm New Password *\\n                    </label>\\n                    <input type=\\\"password\\\" matInput id=\\\"txtConfirmPassword\\\" name=\\\"txtNewPassword\\\" />\\n                </mat-input-container>\\n            </div>\\n\\n            \\n            <div fxFlexAlign=\\\"end\\\">\\n        <button mat-raised-button color=\\\"accent\\\" class=\\\"m-t\\\">Save User</button>\\n      </div>\\n        </div>\\n    </form>\\n</div>\\n</mat-tab>\\n\\n\\n\\n\\n\\n\\n\\n<mat-tab label=\\\"Orders\\\">\\n    <div fxFlex class=\\\"master-detail-container\\\">\\n        <br>\\n        <div class=\\\"panel panel-default panel-faq\\\" style=\\\"border: none;\\\">\\n            <div class=\\\"panel-body\\\" style=\\\"background-color: #ededed; margin-top: 20px;\\\">\\n                <table class=\\\"table table-sm table-inverse\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Order Date</th>\\n                            <th>Order Number</th>\\n                            <th>Total</th>\\n                            <th>Status</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let order of orderList\\\">\\n                            <td>\\n                                <a class=\\\"pointer\\\" (click)=\\\"onDisplayOrder(order)\\\"><span\\n                                   >{{order.orderDate  | date:'medium' }} </span></a>\\n                               </td>\\n                               <td>{{order.id}}</td>\\n                               <td>{{order.orderTotal}}</td>\\n                               <td>{{order.orderStatus}}</td>\\n                           </tr>\\n                       </tbody>\\n                   </table>\\n                   <div *ngIf=\\\"displayOrderDetail\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-xs-12\\\">\\n                            <div class=\\\"text-center\\\">\\n                                <h2>Order Detail for purchase #<span>{{order.id}}</span></h2>\\n                            </div>\\n                            <hr/>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-xs-4\\\">\\n                                    <div class=\\\"panel panel-default height\\\">\\n                                        <div class=\\\"panel-heading\\\"><strong>Billing Details</strong>\\n                                        </div>\\n                                        <div class=\\\"panel-body\\\">\\n                                            <span>{{order.billingAddress.billingAddressName}}</span>\\n                                            <br/>\\n                                            <span>{{order.billingAddress.billingAddressStreet1}} {{order.billingAddress.billingAddressStreet2}}</span>\\n                                            <br/>\\n                                            <span>{{order.billingAddress.billingAddressCity}}</span>\\n                                            <br/>\\n                                            <span>{{order.billingAddress.billingAddressState}}</span>\\n                                            <br/>\\n                                            <span>{{order.billingAddress.billingAddressZipcode}}</span>\\n                                            <br/>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-4\\\">\\n                                    <div class=\\\"panel panel-default height\\\">\\n                                        <div class=\\\"panel-heading\\\"><strong>Payment Information</strong>\\n                                        </div>\\n                                        <div class=\\\"panel-body\\\">\\n                                            <span>{{order.payment.holderName}}</span>\\n                                            <br/> Visa\\n                                            <br/>\\n                                            <span>{{order.payment.cardNumber}}</span>\\n                                            <br/>\\n                                            <span>Exp Date:</span> <span>{{order.payment.expiryMonth}}</span>/<span>{{order.payment.expiryYear}}</span>\\n                                            <br/>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-4\\\">\\n                                    <div class=\\\"panel panel-default height\\\">\\n                                        <div class=\\\"panel-heading\\\"><strong>Shipping Address</strong>\\n                                        </div>\\n                                        <div class=\\\"panel-body\\\">\\n                                            <span>{{order.shippingAddress.shippingAddressName}}</span>\\n                                            <br/>\\n                                            <span>{{order.shippingAddress.shippingAddressStreet1}}' '{{order.shippingAddress.shippingAddressStreet2}}</span>\\n                                            <br/>\\n                                            <span>{{order.shippingAddress.shippingAddressCity}}</span>\\n                                            <br/>\\n                                            <span>{{order.shippingAddress.shippingAddressState}}</span>\\n                                            <br/>\\n                                            <span>{{order.shippingAddress.shippingAddressZipcode}}</span>\\n                                            <br/>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-mat-12\\\">\\n                            <div class=\\\"panel panel-default\\\">\\n                                <div class=\\\"panel-heading\\\">\\n                                    <h3 class=\\\"text-center\\\"><strong>Order summary</strong></h3>\\n                                </div>\\n                                <div class=\\\"panel-body\\\">\\n                                    <div class=\\\"table-responsive\\\">\\n                                        <table class=\\\"table table-condensed\\\">\\n                                            <thead>\\n                                                <tr>\\n                                                    <td><strong>Item Name</strong></td>\\n                                                    <td class=\\\"text-center\\\"><strong>Item Price</strong></td>\\n                                                    <td class=\\\"text-center\\\"><strong>Item Quantity</strong>\\n                                                    </td>\\n                                                    <td class=\\\"text-right\\\"><strong>Total</strong></td>\\n                                                </tr>\\n                                            </thead>\\n                                            <tbody>\\n                                                <tr *ngFor=\\\"let cartItem of cartItemList\\\">\\n                                                    <td>{{cartItem.book.title}}\\n                                                    </td>\\n                                                    <td class=\\\"text-center\\\">{{cartItem.book.ourPrice}}\\n                                                    </td>\\n                                                    <td class=\\\"text-center\\\">\\n                                                        {{cartItem.qty}}\\n                                                    </td>\\n                                                    <td class=\\\"text-right\\\">{{cartItem.subtotal}}\\n                                                    </td>\\n                                                </tr>\\n                                                <tr>\\n                                                    <td class=\\\"highrow\\\"></td>\\n                                                    <td class=\\\"highrow\\\"></td>\\n                                                    <td class=\\\"highrow text-center\\\">\\n                                                        <strong>Subtotal</strong></td>\\n                                                        <td class=\\\"highrow text-right\\\">{{order.orderTotal}}\\n                                                        </td>\\n                                                    </tr>\\n                                                    <tr>\\n                                                        <td class=\\\"emptyrow\\\"></td>\\n                                                        <td class=\\\"emptyrow\\\"></td>\\n                                                        <td class=\\\"emptyrow text-center\\\"><strong>Tax</strong>\\n                                                        </td>\\n                                                        <td class=\\\"emptyrow text-right\\\">{{order.orderTotal*0.06}}\\n                                                        </td>\\n                                                    </tr>\\n                                                    <tr>\\n                                                        <td class=\\\"emptyrow\\\"><i class=\\\"fa fa-barcode iconbig\\\"></i></td>\\n                                                        <td class=\\\"emptyrow\\\"></td>\\n                                                        <td class=\\\"emptyrow text-center\\\"><strong>Total</strong>\\n                                                        </td>\\n                                                        <td class=\\\"emptyrow text-right\\\">{{order.orderTotal*1.06}}\\n                                                        </td>\\n                                                    </tr>\\n                                                </tbody>\\n                                            </table>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </mat-tab>\\n\\n\\n    <mat-tab label=\\\"Payment\\\">\\n        <div fxFlex class=\\\"master-detail-container\\\">\\n            <br><br>    \\n            <p *ngIf=\\\"defaultPaymentSet\\\">Default payment set successfully!</p>\\n            <mat-tab-group (selectedIndexChange)=\\\"selectedBillingChange($event)\\\" [selectedIndex]=\\\"selectedBillingTab\\\">\\n                <mat-tab label=\\\"List of Credit Cards\\\">\\n                    <form (ngSubmit)=\\\"setDefaultPayment()\\\" method=\\\"post\\\">\\n                        <table class=\\\"table\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>Default</th>\\n                                    <th>Credit Card</th>\\n                                    <th>Operations</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let userPayment of userPaymentList\\\">\\n                                    <td>\\n                                        <input type=\\\"radio\\\" name=\\\"defaultUserPaymentId\\\" [(ngModel)]=\\\"defaultUserPaymentId\\\" [value]=\\\"userPayment.id\\\" />\\n                                        <span>default</span>\\n                                    </td>\\n                                    <td>{{userPayment.cardName}}</td>\\n                                    <td>\\n                                        <a mat-button (click)=\\\"onUpdatePayment(userPayment)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n                                        <a mat-button (click)=\\\"onRemovePayment(userPayment.id)\\\"><i class=\\\"fa fa-times\\\"></i></a>\\n                                    </td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                        <button mat-raised-button class=\\\"mat-primary\\\" type=\\\"submit\\\">Save</button>\\n                    </form>\\n                </mat-tab>\\n                <mat-tab label=\\\"Add(Update) Credit Card\\\">\\n                    <form (ngSubmit)=\\\"onNewPayment()\\\" method=\\\"post\\\">\\n                        <div class=\\\"bg-info\\\" *ngIf=\\\"updateUserPaymentInfo\\\">User info updated.</div>\\n                        <input hidden=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"userPayment.id\\\" />\\n                        <div class=\\\"form-group\\\">\\n                            <h5>* Give a name for your card:</h5>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cardName\\\" placeholder=\\\"Card Name\\\" name=\\\"cardName\\\" required=\\\"required\\\" [(ngModel)]=\\\"userPayment.cardName\\\" />\\n                        </div>\\n                        <!-- Billing Address -->\\n                        <hr />\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"billingName\\\">* Name</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"billingName\\\" placeholder=\\\"Receiver name\\\" name=\\\"userBillingName\\\" required=\\\"required\\\" [(ngModel)]=\\\"userBilling.userBillingName\\\" />\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"billingAddress\\\">* Street Address</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"billAddress\\\" placeholder=\\\"Street Address 1\\\" name=\\\"userBillingStreet1\\\" required=\\\"required\\\" [(ngModel)]=\\\"userBilling.userBillingStreet1\\\" />\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Street Address 2\\\" name=\\\"userBillingStreet2\\\" [(ngModel)]=\\\"userBilling.userBillingStreet2\\\" />\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-xs-4\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"billingCity\\\">* City</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userBillingCity\\\" placeholder=\\\"Your Billing City\\\" name=\\\"userBillingCity\\\" required=\\\"required\\\" [(ngModel)]=\\\"userBilling.userBillingCity\\\" />\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-xs-4\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"billingState\\\">* State</label>\\n                                    <select id=\\\"billingState\\\" class=\\\"form-control\\\" name=\\\"userBillingstate\\\" [(ngModel)]=\\\"userBilling.userBillingState\\\" required=\\\"required\\\">\\n                                        <option value=\\\"\\\" disabled>-- state --</option>\\n                                        <option *ngFor=\\\"let state of stateList\\\">{{state}}</option>\\n                                    </select>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-xs-4\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"billingZipcode\\\">* Zipcode</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userBillingZipcode\\\" placeholder=\\\"Zipcode\\\" name=\\\"userBillingZipcode\\\" required=\\\"required\\\" [(ngModel)]=\\\"userBilling.userBillingZipcode\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <!-- User Payment -->\\n                        <hr />\\n                        <div class=\\\"form-group\\\">\\n                            <h4>Credit Card Information</h4>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-xs-12\\\">\\n                                <img src=\\\"../../../assets/image/creditcard.png\\\" class=\\\"img-responsive\\\" />\\n                                <br>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"cardType\\\">* Select Card Type</label>\\n                                    <select id=\\\"cardType\\\" class=\\\"form-control\\\" name=\\\"cardType\\\" [(ngModel)]=\\\"userPayment.type\\\" required=\\\"required\\\">\\n                                        <option value=\\\"\\\" disabled>-- Card Type --</option>\\n                                        <option value=\\\"visa\\\">Visa</option>\\n                                        <option value=\\\"mastercard\\\">Mastercard</option>\\n                                        <option value=\\\"discover\\\">Discover</option>\\n                                        <option value=\\\"amex\\\">American Express</option>\\n                                    </select>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"cardHolder\\\">* Card Holder</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cardholder\\\" placeholder=\\\"Card Holder Name\\\" name=\\\"cardHolderName\\\" required=\\\"required\\\" [(ngModel)]=\\\"userPayment.holderName\\\" />\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"cardNumber\\\">* Card Number</label>\\n                                    <div class=\\\"input-group\\\">\\n                                        <input required=\\\"required\\\" id=\\\"cardNumber\\\" type=\\\"tel\\\" class=\\\"form-control\\\" name=\\\"cardNumber\\\" placeholder=\\\"Valid Card Number\\\" [(ngModel)]=\\\"userPayment.cardNumber\\\" />\\n                                        <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-credit-card\\\"></i></span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-xs-7\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label>* Expiration Date</label>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-xs-6\\\">\\n                                            <select class=\\\"form-control\\\" name=\\\"expiryMonth\\\" required=\\\"required\\\" [(ngModel)]=\\\"userPayment.expiryMonth\\\">\\n                                                <option value=\\\"\\\" disabled=\\\"disabled\\\">\\n                                                    -- Month --\\n                                                </option>\\n                                                <option value=\\\"1\\\">Jan (01)</option>\\n                                                <option value=\\\"2\\\">Feb (02)</option>\\n                                                <option value=\\\"3\\\">Mar (03)</option>\\n                                                <option value=\\\"4\\\">Apr (04)</option>\\n                                                <option value=\\\"5\\\">May (05)</option>\\n                                                <option value=\\\"6\\\">Jun (06)</option>\\n                                                <option value=\\\"7\\\">July (07)</option>\\n                                                <option value=\\\"8\\\">Aug (08)</option>\\n                                                <option value=\\\"9\\\">Sep (09)</option>\\n                                                <option value=\\\"10\\\">Oct (10)</option>\\n                                                <option value=\\\"11\\\">Nov (11)</option>\\n                                                <option value=\\\"12\\\">Dec (12)</option>\\n                                            </select>\\n                                        </div>\\n                                        <div class=\\\"col-xs-6\\\">\\n                                            <select class=\\\"form-control\\\" name=\\\"expiryYear\\\" required=\\\"required\\\" [(ngModel)]=\\\"userPayment.expiryYear\\\">\\n                                                <option value=\\\"\\\" disabled=\\\"disabled\\\">\\n                                                    -- Year --\\n                                                </option>\\n                                                <option value=\\\"17\\\">2017</option>\\n                                                <option value=\\\"18\\\">2018</option>\\n                                                <option value=\\\"19\\\">2019</option>\\n                                                <option value=\\\"20\\\">2020</option>\\n                                                <option value=\\\"21\\\">2021</option>\\n                                                <option value=\\\"22\\\">2022</option>\\n                                                <option value=\\\"23\\\">2023</option>\\n                                                <option value=\\\"24\\\">2024</option>\\n                                                <option value=\\\"25\\\">2025</option>\\n                                            </select>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-xs-5 pull-right\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"cardCVC\\\">CV Code</label>\\n                                    <input id=\\\"cardCVC\\\" type=\\\"tel\\\" class=\\\"form-control\\\" name=\\\"cardCVC\\\" placeholder=\\\"CVC\\\" [(ngModel)]=\\\"userPayment.cvc\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <hr />\\n                        <button mat-raised-button type=\\\"submit\\\" class=\\\"mat-primary\\\">\\n                            Save All\\n                        </button>\\n                    </form>\\n                </mat-tab>\\n            </mat-tab-group>\\n        </div>\\n    </mat-tab>\\n\\n\\n\\n\\n\\n\\n\\n\\n    <mat-tab label=\\\"Shipping\\\">\\n        <br>\\n        <br>\\n        <div fxFlex class=\\\"master-detail-container\\\">\\n\\n            <p *ngIf=\\\"defaultShippingSet\\\">Default shipping set successfully!</p>\\n            <mat-tab-group (selectedIndexChange)=\\\"selectedShippingChange($event)\\\" [selectedIndex]=\\\"selectedShippingTab\\\">\\n                <mat-tab label=\\\"List of Shipping Addresses\\\">\\n                    <form (ngSubmit)=\\\"setDefaultShipping()\\\" method=\\\"post\\\">\\n                        <table class=\\\"table\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>Default</th>\\n                                    <th>Shipping Address</th>\\n                                    <th>Operations</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let userShipping of userShippingList\\\">\\n                                    <td>\\n                                        <input type=\\\"radio\\\" name=\\\"defaultUserShippingId\\\" [(ngModel)]=\\\"defaultUserShippingId\\\" [value]=\\\"userShipping.id\\\" />\\n                                        <span>default</span>\\n                                    </td>\\n                                    <td>{{userShipping.userShippingStreet1}}, {{userShipping.userShippingStreetCity}}, {{userShipping.userShippingState}}</td>\\n                                    <td>\\n                                        <a mat-button (click)=\\\"onUpdateShipping(userShipping)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n                                        <a mat-button (click)=\\\"onRemoveShipping(userShipping.id)\\\"><i class=\\\"fa fa-times\\\"></i></a>\\n                                    </td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                        <button mat-raised-button class=\\\"mat-primary\\\" type=\\\"submit\\\">Save</button>\\n                    </form>\\n                </mat-tab>\\n                <mat-tab label=\\\"Add(Update) Shipping Address\\\">\\n                    <form (ngSubmit)=\\\"onNewShipping()\\\" method=\\\"post\\\">\\n                        <div class=\\\"bg-info\\\" *ngIf=\\\"updateUserShippingInfo\\\">User info updated.</div>\\n                        <input hidden=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"userShipping.id\\\" />\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"shippingname\\\">* Name</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"shippingName\\\" placeholder=\\\"Receiver Name\\\" name=\\\"userShippingName\\\" required=\\\"required\\\" [(ngModel)]=\\\"userShipping.userShippingName\\\" />\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"shippingAddress\\\">* Street Address</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"shippingAddress\\\" placeholder=\\\"Street Address 1\\\" name=\\\"userShippingStreet1\\\" required=\\\"required\\\" [(ngModel)]=\\\"userShipping.userShippingStreet1\\\" />\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Street Address 2\\\" name=\\\"userShippingStreet2\\\" [(ngModel)]=\\\"userShipping.userShippingStreet2\\\" />\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-xs-4\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"shippingCity\\\">* City</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"shippingCity\\\" placeholder=\\\"Your Shipping City\\\" name=\\\"userShippingCity\\\" required=\\\"required\\\" [(ngModel)]=\\\"userShipping.userShippingCity\\\" />\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-xs-4\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"shippingState\\\">* State</label>\\n                                    <select id=\\\"shippingState\\\" class=\\\"form-control\\\" name=\\\"userShippingState\\\" [(ngModel)]=\\\"userShipping.userShippingState\\\" required=\\\"required\\\">\\n                                        <option value=\\\"\\\" disabled>-- state --</option>\\n                                        <option *ngFor=\\\"let state of stateList\\\">{{state}}</option>\\n                                    </select>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-xs-4\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"shippingZipcode\\\">* Zipcode</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userShippingZipcode\\\" placeholder=\\\"Zipcode\\\" name=\\\"userShippingZipcode\\\" required=\\\"required\\\" [(ngModel)]=\\\"userShipping.userShippingZipcode\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <hr />\\n                        <button mat-raised-button type=\\\"submit\\\" class=\\\"mat-primary\\\">\\n                            Save All\\n                        </button>\\n                    </form>\\n                </mat-tab>\\n            </mat-tab-group>\\n        </div>\\n    </mat-tab>\\n</mat-tab-group>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/my-profile/my-profile.component.html\n// module id = ../../../../../src/app/my-profile/my-profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AppConst } from '.././constants/app-const';\nimport { UserService } from '.././services/user.service';\nimport { LoginService } from '.././services/login.service';\nimport { User } from '.././models/user';\nimport { Router } from '@angular/router';\nimport { PaymentService } from '.././services/payment.service';\nimport { ShippingService } from '.././services/shipping.service';\nimport { UserPayment } from '.././models/user-payment';\nimport { UserBilling } from '.././models/user-billing';\nimport { UserShipping } from '.././models/user-shipping';\nimport { Order } from '.././models/order';\nimport { OrderService } from '.././services/order.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n styles: [`\n    .master-detail-container {\n   \n      overflow: hidden;\n      padding: 1rem;\n    .user-registration-form {\n      width: 60%\n    }\n    .gender-radio-group {\n      display: inline-flex;\n      flex-direction: row;\n    }\n    \n    .gender-radio-button {\n      margin: 5px;\n    }\n  `]\n})\n\nexport class MyProfileComponent implements OnInit {\n\n\tpublic serverPath = AppConst.serverPath;\n\tpublic dataFetched = false;\n\tpublic loginError:boolean;\n\tpublic loggedIn:boolean;\n\tpublic credential = {'username':'', 'password':''};\n\n\tpublic user: User = new User();\n\tpublic updateSuccess: boolean;\n\tpublic newPassword: string;\n\tpublic incorrectPassword: boolean;\n\tpublic currentPassword: string;\n\n\tpublic selectedProfileTab: number = 0;\n\tpublic selectedBillingTab: number = 0;\n\tpublic selectedShippingTab : number =0;\n\n\tpublic userPayment: UserPayment = new UserPayment();\n\tpublic userBilling: UserBilling = new UserBilling();\n\tpublic userPaymentList: UserPayment[] =[];\n\tpublic defaultPaymentSet:boolean;\n\tpublic defaultUserPaymentId: number;\n\tpublic stateList: string[] = [];\n\n\tpublic userShipping: UserShipping = new UserShipping();\n\tpublic userShippingList: UserShipping[] = [];\n\n\tpublic defaultUserShippingId: number;\n\tpublic defaultShippingSet: boolean;\n\n  public orderList: Order[] = [];\n  public order:Order = new Order();\n  public displayOrderDetail:boolean;\n\n\n  constructor(\n  \tpublic loginService: LoginService,\n  \tpublic userService: UserService,\n  \tpublic paymentService: PaymentService,\n  \tpublic shippingService: ShippingService,\n    public orderService: OrderService,\n  \tpublic router: Router\n  \t) { }\n\n  selectedShippingChange(val: number) {\n  \tthis.selectedShippingTab = val;\n  }\n\n  selectedBillingChange(val: number) {\n  \tthis.selectedBillingTab = val;\n  }\n\n  onUpdateUserInfo () {\n  \tthis.userService.updateUserInfo(this.user, this.newPassword, this.currentPassword).subscribe(\n  \t\tres => {\n  \t\t\tconsole.log(res.text());\n  \t\t\tthis.updateSuccess=true;\n  \t\t},\n  \t\terror => {\n  \t\t\tconsole.log(error.text());\n  \t\t\tlet errorMessage = error.text();\n  \t\t\tif(errorMessage===\"Incorrect current password!\") this.incorrectPassword=true;\n  \t\t}\n  \t);\n  }\n\n  \n\n  onNewPayment() {\n  \tthis.paymentService.newPayment(this.userPayment).subscribe(\n  \t\tres => {\n  \t\t\tthis.getCurrentUser();\n  \t\t\tthis.selectedBillingTab = 0;\n        this.userPayment=new UserPayment();\n  \t\t},\n  \t\terror => {\n  \t\t\tconsole.log(error.text());\n  \t\t}\n  \t);\n  }\n\n  onUpdatePayment (payment: UserPayment) {\n  \tthis.userPayment = payment;\n  \tthis.userBilling = payment.userBilling;\n  \tthis.selectedBillingTab = 1;\n  }\n\n  onRemovePayment(id:number) {\n  \tthis.paymentService.removePayment(id).subscribe(\n  \t\tres => {\n  \t\t\tthis.getCurrentUser();\n  \t\t},\n  \t\terror => {\n  \t\t\tconsole.log(error.text());\n  \t\t}\n  \t);\n  }\n\n  setDefaultPayment() {\n  \tthis.defaultPaymentSet = false;\n  \tthis.paymentService.setDefaultPayment(this.defaultUserPaymentId).subscribe(\n  \t\tres => {\n  \t\t\tthis.getCurrentUser();\n  \t\t\tthis.defaultPaymentSet = true;\n  \t\t},\n  \t\terror => {\n  \t\t\tconsole.log(error.text());\n  \t\t}\n  \t);\n  }\n\n  onNewShipping() {\n  \tthis.shippingService.newShipping(this.userShipping).subscribe(\n  \t\tres => {\n  \t\t\tthis.getCurrentUser();\n  \t\t\tthis.selectedShippingTab=0;\n        this.userShipping = new UserShipping();\n  \t\t},\n  \t\terror => {\n  \t\t\tconsole.log(error.text());\n  \t\t}\n  \t);\n  }\n\n  onUpdateShipping(shipping: UserShipping) {\n  \tthis.userShipping = shipping;\n  \tthis.selectedShippingTab = 1;\n  }\n\n  onRemoveShipping(id: number) {\n  \tthis.shippingService.removeShipping(id).subscribe(\n  \t\tres => {\n  \t\t\tthis.getCurrentUser();\n  \t\t},\n  \t\terror => {\n  \t\t\tconsole.log(error.text());\n  \t\t}\n  \t);\n  }\n\n  setDefaultShipping() {\n  \tthis.defaultShippingSet = false;\n  \tthis.shippingService.setDefaultShipping(this.defaultUserShippingId).subscribe(\n  \t\tres => {\n  \t\t\tthis.getCurrentUser();\n  \t\t\tthis.defaultShippingSet = true;\n  \t\t},\n  \t\terror => {\n  \t\t\tconsole.log(error.text());\n  \t\t}\n  \t);\n  }\n\n  getCurrentUser() {\n  \tthis.userService.getCurrentUser().subscribe(\n  \t\tres => {\n  \t\t\tthis.user = res.json();\n  \t\t\tthis.userPaymentList = this.user.userPaymentList;\n  \t\t\tthis.userShippingList = this.user.userShippingList;\n\n  \t\t\tfor (let index in this.userPaymentList) {\n  \t\t\t\tif(this.userPaymentList[index].defaultPayment) {\n  \t\t\t\t\tthis.defaultUserPaymentId=this.userPaymentList[index].id;\n  \t\t\t\t\tbreak;\n  \t\t\t\t}\n  \t\t\t}\n\n  \t\t\tfor (let index in this.userShippingList) {\n  \t\t\t\tif(this.userShippingList[index].userShippingDefault) {\n  \t\t\t\t\tthis.defaultUserShippingId=this.userShippingList[index].id;\n  \t\t\t\t\tbreak;\n  \t\t\t\t}\n  \t\t\t}\n\n  \t\t\tthis.dataFetched = true;\n  \t\t},\n  \t\terr => {\n  \t\t\tconsole.log(err);\n  \t\t}\n  \t);\n  }\n\n  onDisplayOrder(order: Order) {\n    console.log(order);\n    this.order=order;\n    this.displayOrderDetail=true;\n  }\n\n  \n\n  ngOnInit() {\n  \tthis.loginService.checkSession().subscribe(\n  \t\tres => {\n  \t\t\tthis.loggedIn = true;\n  \t\t},\n  \t\terror => {\n  \t\t\tthis.loggedIn = false;\n  \t\t\tconsole.log(\"inactive session\");\n  \t\t\tthis.router.navigate(['/myAccount']);\n  \t\t}\n  \t);\n\n  \tthis.getCurrentUser();\n\n    this.orderService.getOrderList().subscribe(\n       res => {\n         this.orderList = res.json();\n        },\n        error => {\n          console.log(error.text());\n        }\n      );\n\n  \tfor (let s in AppConst.usStates) {\n  \t\tthis.stateList.push(s);\n  \t}\n\n  \tthis.userBilling.userBillingState=\"\";\n  \tthis.userPayment.type=\"\";\n  \tthis.userPayment.expiryMonth=\"\";\n  \tthis.userPayment.expiryYear=\"\";\n  \tthis.userPayment.userBilling = this.userBilling;\n  \tthis.defaultPaymentSet = false;\n\n  \tthis.userShipping.userShippingState=\"\";\n  \tthis.defaultShippingSet=false;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/my-profile/my-profile.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/order-summary/order-summary.component.css\n// module id = ../../../../../src/app/order-summary/order-summary.component.css\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AppConst } from '.././constants/app-const';\nimport { Params, ActivatedRoute, Router } from '@angular/router';\nimport { CheckoutService } from '.././services/checkout.service';\nimport { Order } from '.././models/order';\nimport { CartItem } from '.././models/cart-item';\n\n\n@Component({\n  selector: 'app-order-summary',\n  templateUrl: './success.html',\n  styleUrls: ['./order-summary.component.css']\n})\nexport class OrderSummaryComponent implements OnInit {\n\tpublic serverPath = AppConst.serverPath;\n\tpublic order:Order = new Order();\n\tpublic estimatedDeliveryDate: string;\n\tpublic cartItemList: CartItem[] = [];\n\n  constructor(\n  \tpublic checkoutService: CheckoutService,\n  \tpublic route: ActivatedRoute,\n  \tpublic router: Router\n  \t) { }\n\n  ngOnInit() {\n  \tthis.route.queryParams.subscribe(params => {\n  \t\tthis.order = JSON.parse(params['order']);\n\n  \t\tlet deliveryDate = new Date();\n\n  \t\tif(this.order.shippingMethod==\"groundShipping\") {\n  \t\t\tdeliveryDate.setDate(deliveryDate.getDate()+5);\n  \t\t} else {\n  \t\t\tdeliveryDate.setDate(deliveryDate.getDate()+3);\n  \t\t}\n\n  \t\tlet days=[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  \t\tthis.estimatedDeliveryDate = days[deliveryDate.getDay()]+', '+deliveryDate.getFullYear()+'/'+deliveryDate.getMonth()+'/'+deliveryDate.getDate();\n\n\n  \t\tthis.cartItemList = this.order.cartItemList;\n  \t});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/order-summary/order-summary.component.ts","module.exports = \"\\n\\n<br><br>\\n<br>\\n<br>\\n<br>\\n<br>\\n\\n<div class=\\\"jumbotron\\\">\\n  <h1 class=\\\"display-3\\\">Thank you for your payment.!</h1>\\n  <p class=\\\"lead\\\">Your transaction has been completed and a receipt for your purchase has been emailed to you. You will receive an order contining the purchased books.</p>\\n  <hr class=\\\"my-4\\\">\\n  <p></p>\\n  \\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/order-summary/success.html\n// module id = ../../../../../src/app/order-summary/success.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/order/order.component.css\n// module id = ../../../../../src/app/order/order.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n   \\n    <div class=\\\"row\\\" >\\n        <form (ngSubmit)=\\\"onSubmit()\\\" method=\\\"post\\\">\\n\\n            <div class=\\\"col-xs-4\\\">\\n               <br><br>\\n               <div class=\\\"panel panel-default\\\">\\n                <div class=\\\"panel-body\\\">\\n                    <button mat-raised-button type=\\\"submit \\\" class=\\\"btn-block mat-primary\\\">Place your order\\n                    </button>\\n                    <p style=\\\"font-size: smaller\\\">By placing your order, you agree to Le's Bookstore <a href=\\\"#\\\">privacy</a> notice and\\n                        <a href=\\\"#\\\">conditions</a> of use.</p>\\n                        <hr/>\\n                        <h3>Order Summary</h3>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-xs-7 text-left\\\">\\n                                Total before tax:\\n                            </div>\\n                            <div class=\\\"col-xs-5 text-right\\\">\\n                                $\\n                                <span>{{shoppingCart.grandTotal}}</span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row \\\">\\n                            <div class=\\\"col-xs-7 text-left \\\">\\n                                Estimated tax:\\n                            </div>\\n                            <div class=\\\"col-xs-5 text-right \\\">\\n                                $<span>{{shoppingCart.grandTotal*0.06 | number : '1.2-2'}}</span>\\n                            </div>\\n                        </div>\\n                        <hr />\\n                        <div class=\\\"row \\\">\\n                            <div class=\\\"col-xs-7 text-left \\\">\\n                                <h3 style=\\\"color:darkred; \\\"><strong>Order total:</strong></h3>\\n                            </div>\\n                            <div class=\\\"col-xs-5 text-right \\\">\\n                                <h3><strong style=\\\"color:darkred; \\\">$<span\\n                                    >{{shoppingCart.grandTotal*1.06 | number : '1.2-2'}}</span>\\n                                </strong></h3>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"panel-footer \\\">Shipping and handling haven't applied.</div>\\n                        <button (click)=\\\"openCheckout()\\\" mat-raised-button type=\\\"submit \\\" class=\\\"btn-block mat-primary\\\">Purchase</button>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-xs-8 \\\">\\n                <div *ngIf=\\\"missingRequiredField \\\">\\n                    <h5 class=\\\"alert alert-warning \\\">There are some fields missing. Field with * is required. </h5>\\n                </div>\\n                <mat-tab-group (selectedIndexChange)=\\\"selectedChange($event)\\\" [selectedIndex]=\\\"selectedTab\\\">\\n                    <!--1. Shipping Address-->\\n                    <mat-tab label=\\\"1. Shipping Address\\\">\\n                        <div class=\\\"panel panel-default \\\">\\n                            <div class=\\\"panel-heading \\\">\\n                                <h4 class=\\\"panel-title \\\">\\n                                    1. Shipping Address\\n                                </h4>\\n                            </div>\\n                            <div class=\\\"panel-body \\\">\\n                                <table class=\\\"table \\\" *ngIf=\\\"!emptyShippingList \\\">\\n                                    <thead>\\n                                        <tr>\\n                                            <th>Available Shipping Address</th>\\n                                            <th>Operations</th>\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                        <tr *ngFor=\\\"let userShipping of userShippingList \\\">\\n                                            <td>\\n                                                {{userShipping.userShippingStreet1}}, {{userShipping.userShippingStreet2}}, {{userShipping.userShippingCity}}, {{userShipping.userShippingState}}\\n                                            </td>\\n                                            <td>\\n                                                <a class=\\\"pointer\\\" (click)=\\\"setShippingAddress(userShipping) \\\">use\\n                                                    this address</a>\\n                                                </td>\\n                                            </tr>\\n                                        </tbody>\\n                                    </table>\\n                                    <div class=\\\"form-group \\\">\\n                                        <label for=\\\"shippingName \\\">* Name</label>\\n                                        <input type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"shippingName \\\" placeholder=\\\"Recevier Name \\\" name=\\\"shippingAddressName \\\" [(ngModel)]=\\\"shippingAddress.shippingAddressName \\\" />\\n                                    </div>\\n                                    <div class=\\\"form-group \\\">\\n                                        <label for=\\\"shippingAddress \\\">* Street Address</label>\\n                                        <input type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"shippingAddress \\\" placeholder=\\\"Street Address 1 \\\" name=\\\"shippingAddressStreet1 \\\" [(ngModel)]=\\\"shippingAddress.shippingAddressStreet1 \\\" />\\n                                    </div>\\n                                    <div class=\\\"form-group \\\">\\n                                        <input type=\\\"text \\\" class=\\\"form-control \\\" placeholder=\\\"Street Address 2 \\\" name=\\\"shippingAddressStreet2 \\\" [(ngModel)]=\\\"shippingAddress.shippingAddressStreet2 \\\" />\\n                                    </div>\\n                                    <div class=\\\"row \\\">\\n                                        <div class=\\\"col-xs-4 \\\">\\n                                            <div class=\\\"form-group \\\">\\n                                                <label for=\\\"shippingCity \\\">* City</label>\\n                                                <input type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"shippingCity \\\" placeholder=\\\"Your City \\\" name=\\\"shippingAddressCity \\\" [(ngModel)]=\\\"shippingAddress.shippingAddressCity \\\" />\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-xs-4 \\\">\\n                                            <div class=\\\"form-group \\\">\\n                                                <label for=\\\"shippingState \\\">* State</label>\\n                                                <select id=\\\"shippingState \\\" class=\\\"form-control \\\" name=\\\"shippingAddressState \\\" [(ngModel)]=\\\"shippingAddress.shippingAddressState \\\">\\n                                                    <option value=\\\"\\\" disabled>-- state --</option>\\n                                                    <option *ngFor=\\\"let state of stateList \\\">{{state}}\\n                                                    </option>\\n                                                </select>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-xs-4 \\\">\\n                                            <div class=\\\"form-group \\\">\\n                                                <label for=\\\"shippingZipcode \\\">* Zipcode</label>\\n                                                <input type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"shippingZipcode \\\" placeholder=\\\"Zipcode \\\" name=\\\"shippingAddressZipcode \\\" [(ngModel)]=\\\"shippingAddress.shippingAddressZipcode \\\" />\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <a mat-raised-button class=\\\"mat-primary\\\" (click)=\\\"goToPayment()\\\">Next</a>\\n                                </div>\\n                            </div>\\n                        </mat-tab>\\n                        <!--2. Payment Information-->\\n                        <mat-tab label=\\\"2. Payment Information\\\">\\n                            <div class=\\\"panel panel-default \\\">\\n                                <div class=\\\"panel-heading \\\">\\n                                    <h4 class=\\\"panel-title \\\">\\n                                        2. Payment Information\\n                                    </h4>\\n                                </div>\\n                                <div class=\\\"panel-body \\\">\\n                                    <table class=\\\"table \\\" *ngIf=\\\"!emptyPaymentList \\\">\\n                                        <thead>\\n                                            <tr>\\n                                                <th>Available Credit Card</th>\\n                                                <th>Operations</th>\\n                                            </tr>\\n                                        </thead>\\n                                        <tbody>\\n                                            <tr *ngFor=\\\"let userPayment of userPaymentList \\\">\\n                                                <td>\\n                                                    {{userPayment.cardName}}\\n                                                </td>\\n                                                <td>\\n                                                    <a class=\\\"pointer\\\" (click)=\\\"setPaymentMethod(userPayment)\\\">use this address\\n                                                    </a>\\n                                                </td>\\n                                            </tr>\\n                                        </tbody>\\n                                    </table>\\n                                    <!-- CREDIT CARD FORM STARTS HERE -->\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-xs-12\\\">\\n                                            <img src=\\\"../../../assets/image/creditcard.png\\\" class=\\\"img-responsive\\\" />\\n                                            <br/>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label for=\\\"cardType\\\">* Select Card Type:</label>\\n                                                <select class=\\\"form-control\\\" id=\\\"cardType\\\" name=\\\"type\\\" [(ngModel)]=\\\"payment.type\\\">\\n                                                    <option value=\\\"\\\" disabled=\\\"disabled\\\">\\n                                                        -- Card Type --\\n                                                    </option>\\n                                                    <option value=\\\"visa\\\">Visa</option>\\n                                                    <option value=\\\"mastercard\\\">Mastercard</option>\\n                                                    <option value=\\\"discover\\\">Discover</option>\\n                                                    <option value=\\\"amex\\\">American Express</option>\\n                                                </select>\\n                                            </div>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label for=\\\"cardHolder\\\">* Card Holder</label>\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cardHolder\\\" required=\\\"required\\\" placeholder=\\\"Card Holder Name\\\" name=\\\"holderName\\\" [(ngModel)]=\\\"payment.holderName\\\" />\\n                                            </div>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label for=\\\"cardNumber\\\">* Card Number</label>\\n                                                <div class=\\\"input-group\\\">\\n                                                    <input required=\\\"required\\\" id=\\\"cardNumber\\\" type=\\\"tel\\\" class=\\\"form-control\\\" name=\\\"cardNumber\\\" placeholder=\\\"Valid Card Number\\\" name=\\\"cardNumber\\\" [(ngModel)]=\\\"payment.cardNumber\\\" />\\n                                                    <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-credit-card\\\"\\n                                                     aria-hidden=\\\"true\\\"></i></span>\\n                                                 </div>\\n                                             </div>\\n                                         </div>\\n                                     </div>\\n                                     <div class=\\\"row\\\">\\n                                        <div class=\\\"col-xs-7 col-mat-7\\\">\\n                                            <div class=\\\"form-group\\\">\\n                                                <label>* Expiration Date</label>\\n                                                <div class=\\\"row\\\">\\n                                                    <div class=\\\"col-xs-6\\\">\\n                                                        <select class=\\\"form-control\\\" name=\\\"expiryMonth\\\" required=\\\"required\\\" [(ngModel)]=\\\"payment.expiryMonth\\\">\\n                                                            <option value=\\\"\\\" disabled=\\\"disabled\\\">\\n                                                                --Month--\\n                                                            </option>\\n                                                            <option value=\\\"1\\\">Jan (01)</option>\\n                                                            <option value=\\\"2\\\">Feb (02)</option>\\n                                                            <option value=\\\"3\\\">Mar (03)</option>\\n                                                            <option value=\\\"4\\\">Apr (04)</option>\\n                                                            <option value=\\\"5\\\">May (05)</option>\\n                                                            <option value=\\\"6\\\">June (06)</option>\\n                                                            <option value=\\\"7\\\">July (07)</option>\\n                                                            <option value=\\\"8\\\">Aug (08)</option>\\n                                                            <option value=\\\"9\\\">Sep (09)</option>\\n                                                            <option value=\\\"10\\\">Oct (10)</option>\\n                                                            <option value=\\\"11\\\">Nov (11)</option>\\n                                                            <option value=\\\"12\\\">Dec (12)</option>\\n                                                        </select>\\n                                                    </div>\\n                                                    <div class=\\\"col-xs-6\\\">\\n                                                        <select class=\\\"form-control\\\" name=\\\"expiryYear\\\" [(ngModel)]=\\\"payment.expiryYear\\\">\\n                                                            <option value=\\\"\\\" disabled=\\\"disabled\\\">--Year--\\n                                                            </option>\\n                                                            <option value=\\\"17\\\">2017</option>\\n                                                            <option value=\\\"18\\\">2018</option>\\n                                                            <option value=\\\"19\\\">2019</option>\\n                                                            <option value=\\\"20\\\">2020</option>\\n                                                            <option value=\\\"21\\\">2021</option>\\n                                                            <option value=\\\"22\\\">2022</option>\\n                                                            <option value=\\\"23\\\">2023</option>\\n                                                            <option value=\\\"23\\\">2024</option>\\n                                                            <option value=\\\"23\\\">2025</option>\\n                                                            <option value=\\\"23\\\">2026</option>\\n                                                            <option value=\\\"23\\\">2027</option>\\n                                                            <option value=\\\"23\\\">2028</option>\\n                                                            <option value=\\\"23\\\">2029</option>\\n                                                        </select>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-xs-5 col-mat-5 pull-right\\\">\\n                                            <div class=\\\"form-group\\\">\\n                                                <label for=\\\"cardCVC\\\">CV Code</label>\\n                                                <input id=\\\"cardCVC\\\" type=\\\"tel\\\" class=\\\"form-control\\\" name=\\\"cardCVC\\\" placeholder=\\\"CVC\\\" name=\\\"cvc\\\" [(ngModel)]=\\\"payment.cvc\\\" />\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <!-- CREDIT CARD FORM ENDS HERE -->\\n                                    <div class=\\\"checkbox\\\">\\n                                        <label>\\n                                            <input id=\\\"theSameAsShippingAddress\\\" type=\\\"checkbox\\\"\\n                                            name=\\\"billingSameAsShipping\\\" value=\\\"true\\\" (click)=\\\"setBillingAsShipping($event.target.checked)\\\" /> The same as shipping\\n                                            address\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"form-group \\\">\\n                                        <label for=\\\"billingName \\\">* Name</label>\\n                                        <input type=\\\"text \\\" class=\\\"form-control billingAddress \\\" id=\\\"billingName \\\" placeholder=\\\"Recevier Name \\\" name=\\\"billingAddressName \\\" [(ngModel)]=\\\"billingAddress.billingAddressName\\\" />\\n                                    </div>\\n                                    <div class=\\\"form-group \\\">\\n                                        <label for=\\\"billingAddress \\\">* Street Address</label>\\n                                        <input type=\\\"text \\\" id=\\\"billingAddress \\\" class=\\\"form-control billingAddress \\\" placeholder=\\\"Street Address 1 \\\" name=\\\"billingAddressStreet1 \\\" [(ngModel)]=\\\"billingAddress.billingAddressStreet1\\\" />\\n                                    </div>\\n                                    <div class=\\\"form-group \\\">\\n                                        <input type=\\\"text \\\" class=\\\"form-control billingAddress \\\" placeholder=\\\"Street Address 2 \\\" name=\\\"billingAddressStreet2 \\\" [(ngModel)]=\\\"billingAddress.billingAddressStreet2\\\" />\\n                                    </div>\\n                                    <div class=\\\"row \\\">\\n                                        <div class=\\\"col-xs-4 \\\">\\n                                            <div class=\\\"form-group \\\">\\n                                                <label for=\\\"billingCity \\\">* City</label>\\n                                                <input type=\\\"text \\\" class=\\\"form-control billingAddress \\\" id=\\\"billingCity \\\" placeholder=\\\"City \\\" name=\\\"billingAddressCity \\\" [(ngModel)]=\\\"billingAddress.billingAddressCity\\\" />\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-xs-4 \\\">\\n                                            <div class=\\\"form-group \\\">\\n                                                <label for=\\\"billingState \\\">* State</label>\\n                                                <select id=\\\"billingState \\\" class=\\\"form-control billingAddress \\\" name=\\\"billingAddressState \\\" [(ngModel)]=\\\"billingAddress.billingAddressState\\\">\\n                                                    <option value=\\\"\\\" disabled=\\\"disabled \\\">-- state --\\n                                                    </option>\\n                                                    <option *ngFor=\\\"let state of stateList\\\">{{state}}\\n                                                    </option>\\n                                                </select>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-xs-4 \\\">\\n                                            <div class=\\\"form-group \\\">\\n                                                <label for=\\\"billingZipcode \\\">* Zipcode</label>\\n                                                <input type=\\\"text \\\" class=\\\"form-control billingAddress \\\" id=\\\"billingZipcode \\\" placeholder=\\\"Zipcode \\\" name=\\\"billingAddressZipcode \\\" [(ngModel)]=\\\"billingAddress.billingAddressZipcode \\\" />\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <a mat-raised-button class=\\\"mat-primary\\\" (click)=\\\"goToReview()\\\">Next</a>\\n                                </div>\\n                            </div>\\n                        </mat-tab>\\n                        <!--3. Review Items and Shipping-->\\n                        <mat-tab label=\\\"3. Review\\\">\\n                            <div class=\\\"panel panel-default \\\">\\n                                <div class=\\\"panel-heading \\\">\\n                                    <h4 class=\\\"panel-title \\\">\\n                                        3. Review Items and Shipping\\n                                    </h4>\\n                                </div>\\n                                <div class=\\\"panel-body \\\">\\n                                    <h4>Choose your shipping method:</h4>\\n                                    <div class=\\\"radio\\\">\\n                                        <label>\\n                                            <input type=\\\"radio\\\" name=\\\"shippingMethod\\\" value=\\\"groundShipping\\\" [(ngModel)]=\\\"shippingMethod\\\" /> Ground Shipping\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"radio\\\">\\n                                        <label>\\n                                            <input type=\\\"radio\\\" name=\\\"shippingMethod\\\" value=\\\"premiumShipping\\\" [(ngModel)]=\\\"shippingMethod\\\" /> Premium Shipping\\n                                        </label>\\n                                    </div>\\n                                    \\n                                    <div class=\\\"row \\\">\\n                                        <div class=\\\"col-xs-8 \\\">\\n                                            <h4>Products</h4></div>\\n                                            <div class=\\\"col-xs-2 \\\">\\n                                                <h4>Price</h4></div>\\n                                                <div class=\\\"col-xs-2 text-center \\\">\\n                                                    <h4>Qty</h4></div>\\n                                                </div>\\n                                                <!--*******  display products in cart  ********-->\\n                                                <div class=\\\"row \\\" *ngFor=\\\"let cartItem of cartItemList \\\">\\n                                                    <hr/>\\n                                                    <div class=\\\"col-xs-2 \\\">\\n                                                        <a mat-button (click)=\\\"onSelect(cartItem.book)\\\"><img class=\\\"img-responsive shelf-book\\\" src=\\\"{{serverPath}}/image/book/{{cartItem.book.id}}.png\\\" style=\\\"width:70px;\\\" /></a>\\n                                                    </div>\\n                                                    <div class=\\\"col-xs-6 \\\">\\n                                                        <a class=\\\"pointer\\\" (click)=\\\"onSelect(cartItem.book)\\\"><h4>{{cartItem.book.title}}</h4></a>\\n                                                        <p *ngIf=\\\"cartItem.book.inStockNumber > 10\\\" style=\\\"color: green;\\\">In Stock</p>\\n                                                        <p *ngIf=\\\"cartItem.book.inStockNumber < 10 && cartItem.book.inStockNumber > 0\\\" style=\\\"color: green;\\\"> Only <span>{{cartItem.book.inStockNumber}}</span> In Stock\\n                                                        </p>\\n                                                        <p style=\\\"color: darkred;\\\" *ngIf=\\\"cartItem.book.inStockNumber==0\\\">Product Unavailable</p>\\n                                                    </div>\\n                                                    <div class=\\\"col-xs-2 \\\">\\n                                                        <h5 style=\\\"color: #db3208; font-size: large;\\\">$<span [ngClass]=\\\"{'text-strike': cartItem.book.inStockNumber == 0 }\\\"\\n                                                           >{{cartItem.book.ourPrice}}</span>\\n                                                       </h5>\\n                                                   </div>\\n                                                   <div class=\\\"col-xs-2 text-center \\\">\\n                                                    <h5 style=\\\"font-size: large \\\">{{cartItem.qty}}</h5>\\n                                                </div>\\n                                            </div>\\n                                            <hr/>\\n                                           <h4 class=\\\"col-xs-12 text-right\\\"><Strong style=\\\"font-size: large\\\">Total Price (<span\\n                                                >{{cartItemNumber}}</span> items): </Strong><span\\n                                                style=\\\"color: #db3208; font-size: large;\\\">$<span\\n                                                ></span>{{shoppingCart.grandTotal}}</span></h4>\\n                                                <br/>\\n                                                <br/>\\n                                                <button mat-raised-button type=\\\"submit \\\" class=\\\"btn-block mat-primary\\\">Place your order\\n                                                </button>\\n                                                <p>By placing your order, you agree to Le's Bookstore <a href=\\\"# \\\">privacy</a> notice and\\n                                                    <a href=\\\"# \\\">conditions</a> of use.</p>\\n                                                </div>\\n                                            </div>\\n                                        </mat-tab>\\n                                    </mat-tab-group>\\n                                </div>\\n                            </form>\\n                            \\n\\n                        </div>\\n                    </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/order/order.component.html\n// module id = ../../../../../src/app/order/order.component.html\n// module chunks = main","import { Component, OnInit , NgZone } from '@angular/core';\nimport {AppConst} from '.././constants/app-const';\nimport {Book} from '.././models/book';\nimport {Router, NavigationExtras} from '@angular/router';\nimport {CartService} from '.././services/cart.service';\nimport {ShippingService} from '.././services/shipping.service';\nimport {PaymentService} from '.././services/payment.service';\nimport {CheckoutService} from '.././services/checkout.service';\nimport {CartItem} from '.././models/cart-item';\nimport {ShoppingCart} from '.././models/shopping-cart';\nimport {ShippingAddress} from '.././models/shipping-address';\nimport {BillingAddress} from '.././models/billing-address';\nimport {UserPayment} from '.././models/user-payment';\nimport {UserBilling} from '.././models/user-billing';\nimport {UserShipping} from '.././models/user-shipping';\nimport {Payment} from '.././models/payment';\nimport {Order} from '.././models/order';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n  public serverPath = AppConst.serverPath;\n  public selectedBook: Book;\n  public cartItemList: CartItem[] = [];\n  public cartItemNumber: number;\n  public shoppingCart: ShoppingCart = new ShoppingCart();\n  public cartItemUpdated:boolean;\n  public shippingAddress:ShippingAddress=new ShippingAddress();\n  public billingAddress:BillingAddress = new BillingAddress();\n  public userPayment:UserPayment = new UserPayment();\n  public userShipping:UserShipping = new UserShipping();\n  public userBilling: UserBilling = new UserBilling();\n  public userShippingList: UserShipping[] = [];\n  public userPaymentList: UserPayment[] = [];\n  public payment: Payment = new Payment();\n  public selectedTab: number;\n  public emptyShippingList: boolean = true;\n  public emptyPaymentList: boolean = true;\n  public stateList: string[] = [];\n  public shippingMethod:string;\n  public order:Order = new Order();\n\n  constructor(\n  \tpublic router:Router,\n  \tpublic cartService: CartService,\n  \tpublic shippingService: ShippingService,\n  \tpublic paymentService: PaymentService,\n  \tpublic checkoutService: CheckoutService,\n    public _ngZone: NgZone\n  \t) { }\n\n\n\n  onSelect(book:Book) {\n    this.selectedBook = book;\n    this.router.navigate(['/bookDetail', this.selectedBook.id]);\n  }\n\n  selectedChange(val :number ){\n    this.selectedTab=val;\n  }\n\n  goToPayment() {\n  \tthis.selectedTab=1;\n  }\n\n  goToReview() {\n  \tthis.selectedTab=2;\n  }\n\n  getCartItemList(){\n    this.cartService.getCartItemList().subscribe(\n      res=>{\n        this.cartItemList = res.json();\n        this.cartItemNumber = this.cartItemList.length;\n      },\n      error=>{\n        console.log(error.text());\n      }\n      );\n  }\n\n  setShippingAddress(userShipping: UserShipping) {\n  \tthis.shippingAddress.shippingAddressName = userShipping.userShippingName;\n  \tthis.shippingAddress.shippingAddressStreet1 = userShipping.userShippingStreet1;\n  \tthis.shippingAddress.shippingAddressStreet2 = userShipping.userShippingStreet2;\n  \tthis.shippingAddress.shippingAddressCity = userShipping.userShippingCity;\n  \tthis.shippingAddress.shippingAddressState = userShipping.userShippingState;\n  \tthis.shippingAddress.shippingAddressCountry = userShipping.userShippingCountry;\n  \tthis.shippingAddress.shippingAddressZipcode = userShipping.userShippingZipcode;\n  }\n\n  setPaymentMethod(userPayment: UserPayment) {\n  \tthis.payment.type = userPayment.type;\n  \tthis.payment.cardNumber = userPayment.cardNumber;\n  \tthis.payment.expiryMonth = userPayment.expiryMonth;\n  \tthis.payment.expiryYear = userPayment.expiryYear;\n  \tthis.payment.cvc = userPayment.cvc;\n  \tthis.payment.holderName = userPayment.holderName;\n  \tthis.payment.defaultPayment = userPayment.defaultPayment;\n  \tthis.billingAddress.billingAddressName = userPayment.userBilling.userBillingName;\n  \tthis.billingAddress.billingAddressStreet1 = userPayment.userBilling.userBillingStreet1;\n  \tthis.billingAddress.billingAddressStreet2 = userPayment.userBilling.userBillingStreet2;\n  \tthis.billingAddress.billingAddressCity = userPayment.userBilling.userBillingCity;\n  \tthis.billingAddress.billingAddressState = userPayment.userBilling.userBillingState;\n  \tthis.billingAddress.billingAddressCountry = userPayment.userBilling.userBillingCountry;\n  \tthis.billingAddress.billingAddressZipcode = userPayment.userBilling.userBillingZipcode;\n  }\n\n  setBillingAsShipping(checked:boolean){\n  \tconsole.log(\"same as shipping\")\n\n  \tif(checked) {\n      this.billingAddress.billingAddressName = this.shippingAddress.shippingAddressName;\n      this.billingAddress.billingAddressStreet1 = this.shippingAddress.shippingAddressStreet1;\n      this.billingAddress.billingAddressStreet2 = this.shippingAddress.shippingAddressStreet2;\n      this.billingAddress.billingAddressCity = this.shippingAddress.shippingAddressCity;\n      this.billingAddress.billingAddressState = this.shippingAddress.shippingAddressState;\n      this.billingAddress.billingAddressCountry = this.shippingAddress.shippingAddressCountry;\n      this.billingAddress.billingAddressZipcode = this.shippingAddress.shippingAddressZipcode;\n    } else {\n      this.billingAddress.billingAddressName = \"\";\n      this.billingAddress.billingAddressStreet1 = \"\";\n      this.billingAddress.billingAddressStreet2 = \"\";\n      this.billingAddress.billingAddressCity = \"\";\n      this.billingAddress.billingAddressState = \"\";\n      this.billingAddress.billingAddressCountry = \"\";\n      this.billingAddress.billingAddressZipcode = \"\";\n    }\n  }\n\n  onSubmit(){\n  \tthis.checkoutService.checkout(\n      this.shippingAddress,\n      this.billingAddress,\n      this.payment,\n      this.shippingMethod\n      ).subscribe(\n\n\n      res=>{\n\n          console.log(res.text());\n        //this.order=res.json();\n       // console.log(this.order);\n      //  let navigationExtras: NavigationExtras = {\n         //   queryParams: {\n           //     \"order\": JSON.stringify(this.order)\n      //      }\n      //  };\n\n       // this.router.navigate(['/orderSummary'], navigationExtras);\n       window.location.href = res.text();\n                 //console.log(res.json());\n\n\n      },\n      error=>{\n        console.log(error.text());\n      }\n      );\n    }\n\n    ngOnInit() {\n      this.getCartItemList();\n\n\n      this.cartService.getShoppingCart().subscribe(\n        res=>{\n          console.log(res.json());\n          this.shoppingCart=res.json();\n        },\n        error=>{\n          console.log(error.text());\n        }\n        );\n\n      this.shippingService.getUserShippingList().subscribe(\n        res=>{\n          console.log(res.json());\n          this.userShippingList=res.json();\n          if(this.userShippingList.length) {\n            this.emptyShippingList = false;\n\n            for (let userShipping of this.userShippingList) {\n              if(userShipping.userShippingDefault) {\n                this.setShippingAddress(userShipping);\n                return;\n              }\n            }\n          }\n        },\n        error=>{\n          console.log(error.text());\n        }\n        );\n\n      this.paymentService.getUserPaymentList().subscribe(\n        res=>{\n          console.log(res.json());\n          this.userPaymentList=res.json();\n          this.emptyPaymentList = false;\n\n          if(this.userPaymentList.length) {\n            this.emptyPaymentList = false;\n\n            for (let userPayment of this.userPaymentList) {\n              if(userPayment.defaultPayment) {\n                this.setPaymentMethod(userPayment);\n                return;\n              }\n            }\n          }\n        },\n        error=>{\n          console.log(error.text());\n        }\n        );\n\n      for (let s in AppConst.usStates) {\n        this.stateList.push(s);\n      }\n\n      this.payment.type=\"\";\n      this.payment.expiryMonth=\"\";\n      this.payment.expiryYear=\"\";\n      this.billingAddress.billingAddressState=\"\";\n      this.shippingAddress.shippingAddressState=\"\";\n      this.shippingMethod=\"groundShipping\";\n    }\n\n\n\n  }\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/order/order.component.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({name: 'safe'})\nexport class Safe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) {\n    this.sanitizer = sanitizer;\n  }\n\n  transform(style) {\n    return this.sanitizer.bypassSecurityTrustStyle(style);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/safe.ts","import { Injectable } from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport {Book} from '../models/book';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/delay';\n\n@Injectable()\nexport class AdminBookService {\n\n  constructor(private http:Http) { }\n\n  sendBook(book:Book) {\n  \tlet url = \"http://localhost:8181/book/add\";\n    \n    let headers = new Headers ({\n      'Content-Type': 'application/json',\n      'x-auth-token' : localStorage.getItem('xAuthToken')\n    });\n\n    return this.http.post(url, JSON.stringify(book), {headers: headers}) .map(response => response);\n  }\n\n  sendBookU(book:Book) {\n  \tlet url = \"http://localhost:8181/book/update\";\n    \n    let headers = new Headers ({\n      'Content-Type': 'application/json',\n      'x-auth-token' : localStorage.getItem('xAuthToken')\n    });\n\n    return this.http.post(url, JSON.stringify(book), {headers: headers});\n  }\ngetBookList():Observable<Book[]> {\n  \tlet url = \"http://localhost:8181/book/bookList\";\n    let headers = new Headers ({\n      'Content-Type': 'application/json',\n      'x-auth-token' : localStorage.getItem('xAuthToken')\n    });\n\n    return this.http.get(url, {headers: headers}).delay(5000)\n      .map(response => response.json() as Book[]);;\n  }\n\n   getBook(id:number): Observable<Book> {\n  \tlet url = \"http://localhost:8181/book/\"+id;\n    let headers = new Headers ({\n      'Content-Type': 'application/json',\n      'x-auth-token' : localStorage.getItem('xAuthToken')\n    });\n\n    return this.http.get(url, {headers: headers}).map(response => response.json() as Book);;\n  }\n\n   sendBookR(bookId: number) {\n  \tlet url = \"http://localhost:8181/book/remove\";\n    \n    let headers = new Headers ({\n      'Content-Type': 'application/json',\n      'x-auth-token' : localStorage.getItem('xAuthToken')\n    });\n\n    return this.http.post(url, bookId, {headers: headers}).map(response => response);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/admin-book.service.ts","import { Injectable } from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport {AppConst} from '../constants/app-const';\n\n@Injectable()\nexport class CartService {\n\n  constructor(private http:Http) { }\n\n  addItem(id:number, qty: number) {\n  \tlet url = AppConst.serverPath+\"/cart/add\";\n  \tlet cartItemInfo = {\n  \t\t\"bookId\" : id,\n  \t\t\"qty\" : qty\n  \t}\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.post(url, cartItemInfo, {headers: tokenHeader});\n  }\n\n  getCartItemList() {\n  \tlet url = AppConst.serverPath+\"/cart/getCartItemList\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.get(url, {headers: tokenHeader});\n  }\n\n  getShoppingCart() {\n  \tlet url = AppConst.serverPath+\"/cart/getShoppingCart\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.get(url, {headers: tokenHeader});\n  }\n\n  updateCartItem(cartItemId: number, qty: number) {\n  \tlet url = AppConst.serverPath+\"/cart/updateCartItem\";\n  \tlet cartItemInfo = {\n  \t\t\"cartItemId\" : cartItemId,\n  \t\t\"qty\" : qty\n  \t}\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.post(url, cartItemInfo, {headers: tokenHeader});\n  }\n\n  removeCartItem(id: number) {\n  \tlet url = AppConst.serverPath+\"/cart/removeItem\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.post(url, id, {headers: tokenHeader});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/cart.service.ts","import { Injectable } from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport {AppConst} from '../constants/app-const';\nimport {ShippingAddress} from '../models/shipping-address';\nimport {BillingAddress} from '../models/billing-address';\nimport {Payment} from '../models/payment';\n\n\n@Injectable()\nexport class CheckoutService {\n\n  constructor(private http: Http) { }\n\n  checkout(\n  \tshippingAddress: ShippingAddress,\n  \tbillingAddress: BillingAddress,\n  \tpayment:Payment,\n  \tshippingMethod:string\n  \t){\n\t\tlet url = AppConst.serverPath+\"/pay\";\n\t\tlet order ={\n\t\t\t\"shippingAddress\" : shippingAddress,\n\t\t\t\"billingAddress\" : billingAddress,\n\t\t\t\"payment\" : payment,\n\t\t\t\"shippingMethod\" : shippingMethod\n\t\t}\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.post(url, order, {headers: tokenHeader});\n  }\n\n  getUserOrder() {\n  \tlet url = AppConst.serverPath+\"/checkout/getUserOrder\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.get(url, {headers: tokenHeader});\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/checkout.service.ts","import { AdminBookService } from './admin-book.service';\nimport { LoginService } from './login.service';\nimport { UploadImageService } from './upload-image.service';\n\nimport { CartService } from './cart.service';\nimport { CheckoutService } from './checkout.service';\nimport { OrderService } from './order.service';\nimport { PaymentService } from './payment.service';\nimport { ShippingService } from './shipping.service';\nimport { UserService } from './user.service';\n\n\nexport {\n  AdminBookService,\n  UploadImageService,\n  LoginService,\n  CartService,\n  CheckoutService,\n  OrderService,\n  PaymentService,\n  ShippingService,\n  UserService,\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/index.ts","import { Injectable } from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\n\n@Injectable()\nexport class LoginService {\n\n  constructor(private http: Http) { }\n\n  sendCredential(username: string, password: string) {\n  \tlet url = \"http://localhost:8181/token\";\n  \tlet encodedCredentials = btoa(username+\":\"+password);\n  \tlet basicHeader = \"Basic \"+encodedCredentials;\n  \tlet headers = new Headers ({\n  \t\t'Content-Type' : 'application/x-www-form-urlencoded',\n  \t\t'Authorization' : basicHeader\n  \t});\n\n  \treturn this.http.get(url, {headers: headers});\n\n  }\n\n  checkSession() {\n    let url = \"http://localhost:8181/checkSession\";\n    \n    let headers = new Headers ({\n      'x-auth-token' : localStorage.getItem('xAuthToken')\n    });\n\n    return this.http.get(url, {headers: headers});\n  }\n\n  logout() {\n    let url = \"http://localhost:8181/user/logout\";\n    \n    let headers = new Headers ({\n      'x-auth-token' : localStorage.getItem('xAuthToken')\n    });\n\n    return this.http.post(url, '', {headers: headers});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/login.service.ts","import { Injectable } from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport {AppConst} from '../constants/app-const';\nimport {Order} from '../models/order';\n\n@Injectable()\nexport class OrderService {\n\n  constructor(private http:Http) { }\n\n  getOrderList() {\n  \tlet url = AppConst.serverPath+\"/order/getOrderList\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.get(url, {headers: tokenHeader});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/order.service.ts","import { Injectable } from '@angular/core';\nimport { AppConst } from '../constants/app-const';\nimport { Http, Headers } from '@angular/http';\nimport { UserPayment } from '../models/user-payment';\n\n@Injectable()\nexport class PaymentService {\n  private serverPath: string = AppConst.serverPath;\n\n  constructor(private http : Http) { }\n\n  newPayment(payment: UserPayment) {\n  \tlet url = this.serverPath+\"/payment/add\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.post(url, JSON.stringify(payment), {headers: tokenHeader});\n  }\n\n  getUserPaymentList() {\n  \tlet url = this.serverPath+\"/payment/getUserPaymentList\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.get(url,  {headers: tokenHeader});\n  }\n\n  removePayment(id: number) {\n  \tlet url = this.serverPath+\"/payment/remove\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.post(url, id, {headers: tokenHeader});\n  }\n\n  setDefaultPayment (id: number) {\n  \tlet url = this.serverPath+\"/payment/setDefault\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.post(url, id, {headers: tokenHeader});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/payment.service.ts","import { Injectable } from '@angular/core';\nimport { AppConst } from '../constants/app-const';\nimport { Http, Headers } from '@angular/http';\nimport { UserShipping } from '../models/user-shipping';\n\n@Injectable()\nexport class ShippingService {\n\n  private serverPath: string = AppConst.serverPath;\n\n  constructor(private http : Http) { }\n\n  newShipping(shipping: UserShipping) {\n  \tlet url = this.serverPath+\"/shipping/add\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.post(url, JSON.stringify(shipping), {headers: tokenHeader});\n  }\n\n  getUserShippingList() {\n  \tlet url = this.serverPath+\"/shipping/getUserShippingList\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.get(url, {headers: tokenHeader});\n  }\n\n  removeShipping(id:number){\n  \tlet url = this.serverPath+\"/shipping/remove\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.post(url, id, {headers: tokenHeader});\n  }\n\n  setDefaultShipping(id:number){\n  \tlet url = this.serverPath+\"/shipping/setDefault\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.post(url, id, {headers: tokenHeader});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/shipping.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UploadImageService {\n\n  filesToUpload: Array<File>;\n\n  constructor() {\n  \tthis.filesToUpload = [];\n  }\n\n  upload(bookId: number) {\n  \tthis.makeFileRequest(\"http://localhost:8181/book/add/image?id=\"+bookId, [], this.filesToUpload).then((result) => {\n  \t\tconsole.log(result);\n  \t}, (error) => {\n  \t\tconsole.log(error);\n  \t});\n  }\n\n  modify(bookId: number) {\n    console.log(this.filesToUpload);\n    if (this.filesToUpload.length>0) {\n      this.makeFileRequest(\"http://localhost:8181/book/update/image?id=\"+bookId, [], this.filesToUpload).then((result) => {\n      console.log(result);\n    }, (error) => {\n      console.log(error);\n    });\n    }\n  }\n\n  fileChangeEvent(fileInput: any) {\n  \tthis.filesToUpload = <Array<File>> fileInput.target.files;\n  }\n\n  makeFileRequest(url:string, params:Array<string>, files:Array<File>) {\n  \treturn new Promise((resolve, reject) => {\n  \t\tvar formData:any = new FormData();\n  \t\tvar xhr = new XMLHttpRequest();\n  \t\tfor(var i=0; i<files.length;i++) {\n  \t\t\tformData.append(\"uploads[]\", files[i], files[i].name);\n  \t\t}\n  \t\txhr.onreadystatechange = function() {\n  \t\t\tif(xhr.readyState == 4) {\n  \t\t\t\tif(xhr.status==200) {\n  \t\t\t\t\tconsole.log(\"image uploaded successfully!\");\n  \t\t\t\t} else {\n  \t\t\t\t\treject(xhr.response);\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n\n  \t\txhr.open(\"POST\", url, true);\n  \t\txhr.setRequestHeader(\"x-auth-token\", localStorage.getItem(\"xAuthToken\"));\n  \t\txhr.send(formData);\n  \t});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/upload-image.service.ts","import { Injectable } from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport {AppConst} from '../constants/app-const';\nimport {User} from '../models/user';\n\n@Injectable()\nexport class UserService {\n  private serverPath: string = AppConst.serverPath;\n\n  constructor(private http:Http) { }\n\n  newUser(username: string, email:string) {\n  \tlet url = this.serverPath+'/user/newUser';\n  \tlet userInfo = {\n  \t\t\"username\" : username,\n  \t\t\"email\" : email\n  \t}\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem('xAuthToken')\n  \t});\n\n  \treturn this.http.post(url, JSON.stringify(userInfo), {headers : tokenHeader});\n  }\n\n  updateUserInfo(user: User, newPassword: string, currentPassword: string) {\n    let url = this.serverPath + \"/user/updateUserInfo\";\n    let userInfo = {\n      \"id\" : user.id,\n      \"firstName\" : user.firstName,\n      \"lastName\" : user.lastName,\n      \"username\" : user.username,\n      \"currentPassword\" : currentPassword,\n      \"email\" : user.email,\n      \"newPassword\" :newPassword\n    };\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.post(url, JSON.stringify(userInfo), {headers:tokenHeader});\n  }\n\n  retrievePassword(email:string) {\n  \tlet url = this.serverPath+'/user/forgetPassword';\n  \tlet userInfo = {\n  \t\t\"email\" : email\n  \t}\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem('xAuthToken')\n  \t});\n\n  \treturn this.http.post(url, JSON.stringify(userInfo), {headers : tokenHeader});\n  }\n\n  getCurrentUser() {\n    let url = this.serverPath+'/user/getCurrentUser';\n    \n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem('xAuthToken')\n    });\n\n    return this.http.get(url, {headers : tokenHeader});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/services/user.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/shopping-cart/shopping-cart.component.css\n// module id = ../../../../../src/app/shopping-cart/shopping-cart.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n    \\n    <hr style=\\\"position: absolute;width:85%; height:6px; background-color: #333; z-index:-1; margin-top: -170px;\\\" />\\n    <div class=\\\"row\\\" style=\\\"margin-top: 120px;\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-6 text-left\\\">\\n                    <a mat-raised-button class=\\\"mat-warn\\\" routerLink=\\\"/books\\\">Continue Shopping</a>\\n                </div>\\n                <div class=\\\"col-xs-6 text-right\\\">\\n                    <a mat-raised-button class=\\\"mat-warn\\\" routerLink=\\\"/checkout\\\">Check Out</a>\\n                </div>\\n            </div>\\n            <br/>\\n            <div *ngIf=\\\"cartItemUpdated\\\" class=\\\"alert alert-success\\\">\\n                Cart Item Updated Successfully!\\n            </div>\\n            <div *ngIf=\\\"notEnoughStock\\\" class=\\\"alert alert-warning\\\">\\n                Oops, some of the products don't have enough stock. Please update product quantity.\\n            </div>\\n            <div *ngIf=\\\"emptyCart\\\" class=\\\"alert alert-warning\\\">\\n                Oops, your cart is empty. See if you can find what you link in the bookshelf and add them to cart.\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-8\\\">\\n                    <h4>Products</h4>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <h4>Price</h4>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <h4>Qty</h4>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" *ngFor=\\\"let cartItem of cartItemList\\\">\\n                <hr/>\\n                <div class=\\\"col-xs-2\\\">\\n                    <a mat-button (click)=\\\"onSelect(cartItem.book)\\\"><img class=\\\"img-responsive\\\" src=\\\"{{serverPath}}/image/book/{{cartItem.book.id}}.png\\\" style=\\\"width:70px;\\\" /></a>\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                    <a class=\\\"pointer\\\" (click)=\\\"onSelect(cartItem.book)\\\">\\n                        <h4>{{cartItem.book.title}}</h4></a>\\n                    <p *ngIf=\\\"cartItem.book.inStockNumber > 10\\\" style=\\\"color:green;\\\">In Stock</p>\\n                    <p *ngIf=\\\"cartItem.book.inStockNumber < 10 && cartItem.book.inStockNumber > 0\\\" style=\\\"color:green;\\\">Only <span>{{cartItem.book.inStockNumber}}</span> In Stock</p>\\n                    <p *ngIf=\\\"cartItem.book.inStockNumber == 0\\\" style=\\\"color:darkred;\\\">Product Unavailable</p>\\n                    <a class=\\\"pointer\\\" (click)=\\\"onRemoveCartItem(cartItem)\\\">delete</a>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <h5 style=\\\"color:#db3208; font-size:large;\\\">$<span [ngClass]=\\\"{'text-strike': cartItem.book.inStockNumber == 0}\\\">{{cartItem.book.ourPrice}}</span>\\n            \\t\\t\\t</h5>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input hidden=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"cartItem.id\\\" />\\n                    <input id=\\\"cartItem.id\\\" name=\\\"qty\\\" [disabled]=\\\"cartItem.book.inStockNumber==0\\\" class=\\\"form-control cartItemQty\\\" [(ngModel)]=\\\"cartItem.qty\\\" (ngModelChange)=\\\"cartItem.toUpdate=true\\\" />\\n                    <a mat-button *ngIf=\\\"cartItem.toUpdate\\\" class=\\\"pointer mat-warn\\\" (click)=\\\"onUpdateCartItem(cartItem)\\\">Update</a>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <hr />\\n                <h4 class=\\\"col-xs-12 text-right\\\"><strong style=\\\"font-size: large\\\">Total Price (<span>{{cartItemNumber}}</span> items): </strong><span style=\\\"color:#db3208;font-size: large\\\">$ <span>{{shoppingCart.grandTotal}}</span></span></h4>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/shopping-cart/shopping-cart.component.html\n// module id = ../../../../../src/app/shopping-cart/shopping-cart.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AppConst } from '.././constants/app-const';\nimport { Router } from '@angular/router';\nimport { Book } from '.././models/book';\nimport { CartService } from '.././services/cart.service';\nimport { ShoppingCart } from '.././models/shopping-cart';\nimport { CartItem } from '.././models/cart-item';\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit {\n\tpublic serverPath = AppConst.serverPath;\n\tpublic selectedBook: Book;\n\tpublic cartItemList: CartItem[] = [];\n\tpublic cartItemNumber: number;\n\tpublic shoppingCart: ShoppingCart = new ShoppingCart();\n\tpublic cartItemUpdated: boolean;\n\tpublic emptyCart: boolean;\n\tpublic notEnoughStock: boolean;\n\n  constructor(\n  \t\tpublic router:Router,\n  \t\tpublic cartService: CartService\n  \t) { }\n\n  onSelect(book:Book) {\n  \tthis.selectedBook = book;\n  \tthis.router.navigate(['/bookDetail', this.selectedBook.id]);\n  }\n\n  onRemoveCartItem(cartItem: CartItem) {\n  \tthis.cartService.removeCartItem(cartItem.id).subscribe(\n  \t\tres => {\n  \t\t\tconsole.log(res.text());\n  \t\t\tthis.getCartItemList();\n  \t\t\tthis.getShoppingCart();\n  \t\t},\n  \t\terror => {\n  \t\t\tconsole.log(error.text());\n  \t\t}\n  \t);\n  }\n\n  onUpdateCartItem(cartItem: CartItem) {\n  \tthis.cartService.updateCartItem(cartItem.id, cartItem.qty).subscribe(\n  \t\tres => {\n  \t\t\tconsole.log(res.text());\n  \t\t\tthis.cartItemUpdated=true;\n  \t\t\tthis.getShoppingCart();\n  \t\t},\n  \t\terror => {\n  \t\t\tconsole.log(error.text());\n  \t\t}\n  \t)\n  }\n\n  getCartItemList()  {\n  \tthis.cartService.getCartItemList().subscribe(\n  \t\tres => {\n        console.log(res);\n  \t\t\tthis.cartItemList=res.json();\n  \t\t\tthis.cartItemNumber = this.cartItemList.length;\n  \t\t},\n  \t\terror => {\n  \t\t\tconsole.log(error.text());\n  \t\t}\n  \t)\n  }\n\n  getShoppingCart() {\n  \tthis.cartService.getShoppingCart().subscribe(\n  \t\tres => {\n  \t\t\tconsole.log(res.json());\n  \t\t\tthis.shoppingCart=res.json();\n  \t\t},\n  \t\terror => {\n  \t\t\tconsole.log(error.text());\n  \t\t}\n  \t)\n  }\n\n  onCheckout() {\n  \tif(this.cartItemNumber==0) {\n  \t\tthis.emptyCart=true;\n  \t} else {\n  \t\tfor (let item of this.cartItemList) {\n  \t\t\tif (item.qty > item.book.inStockNumber) {\n  \t\t\t\tconsole.log(\"not enough stock on some item\");\n  \t\t\t\tthis.notEnoughStock=true;\n  \t\t\t\treturn;\n  \t\t\t}\n  \t\t}\n\n\t\t\t// this.router.navigate('[/order]');\n  \t}\n  }\n\n  ngOnInit() {\n  \tthis.getCartItemList();\n  \tthis.getShoppingCart();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/shopping-cart/shopping-cart.component.ts","module.exports = \"<div class=\\\"user-registration-form p-a\\\">\\n  <h3>User Registration</h3>\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"submitUserForm(form.value)\\\" ngNativeValidate>\\n\\n    <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"8px\\\">\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\">\\n        <mat-input-container fxFlex>\\n          <input matInput ngModel name=\\\"firstName\\\" placeholder=\\\"First Name\\\" required>\\n        </mat-input-container>\\n\\n        <mat-input-container fxFlex>\\n          <input matInput ngModel name=\\\"lastName\\\" placeholder=\\\"Last Name\\\" required>\\n        </mat-input-container>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\">\\n        <mat-input-container fxFlex>\\n          <input matInput ngModel name=\\\"password\\\" placeholder=\\\"Password\\\" required>\\n        </mat-input-container>\\n\\n        <mat-input-container fxFlex>\\n          <input matInput ngModel name=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\" required>\\n        </mat-input-container>\\n      </div>\\n\\n      <div ngModelGroup=\\\"address\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"8px\\\">\\n\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\">\\n          <mat-input-container fxFlex>\\n            <input matInput ngModel name=\\\"street\\\" placeholder=\\\"Street\\\" required>\\n          </mat-input-container>\\n\\n          <mat-input-container fxFlex>\\n            <input matInput ngModel name=\\\"city\\\" placeholder=\\\"City\\\" required>\\n          </mat-input-container>\\n        </div>\\n\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\">\\n          <mat-input-container fxFlex>\\n            <input matInput ngModel name=\\\"state\\\" placeholder=\\\"State\\\" required>\\n          </mat-input-container>\\n          <mat-input-container fxFlex>\\n            <input matInput ngModel name=\\\"zip\\\" placeholder=\\\"Zip\\\" required>\\n          </mat-input-container>\\n        </div>\\n\\n      </div>\\n\\n      <mat-select name=\\\"country\\\" placeholder=\\\"Country\\\" ngModel required>\\n        <mat-option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.code\\\">\\n          {{ country.name }}\\n        </mat-option>\\n      </mat-select>\\n\\n      <mat-radio-group class=\\\"gender-radio-group\\\" ngModel name=\\\"gender\\\" class=\\\"m-t\\\" required>\\n        <mat-radio-button class=\\\"gender-radio-button\\\" *ngFor=\\\"let gender of genders\\\" [value]=\\\"gender\\\">\\n          {{gender}}\\n        </mat-radio-button>\\n      </mat-radio-group>\\n\\n      <mat-slide-toggle ngModel name=\\\"isAdmin\\\" class=\\\"m-t\\\">Admin User</mat-slide-toggle>\\n\\n      <mat-checkbox name=\\\"agreement\\\" ngModel class=\\\"m-t\\\" required>\\n        I agree to the Terms of Service\\n      </mat-checkbox>\\n\\n      <div fxFlexAlign=\\\"end\\\">\\n        <button mat-raised-button color=\\\"accent\\\" class=\\\"m-t\\\">Save User</button>\\n      </div>\\n\\n    </div>\\n  </form>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/user-registration/user-registration.component.html\n// module id = ../../../../../src/app/user-registration/user-registration.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'user-registration',\n  templateUrl: './user-registration.component.html',\n  styles: [`.user-registration-form {\n      width: 60%\n    }\n    .gender-radio-group {\n      display: inline-flex;\n      flex-direction: row;\n    }\n\n    .gender-radio-button {\n      margin: 5px;\n    }\n  `]\n})\nexport class UserRegistrationComponent {\n  countries: Array<object> = [\n    {code: 'CA', name: 'Canada'},\n    {code: 'SW', name: 'Switzerland'},\n    {code: 'IN', name: 'India'},\n    {code: 'UK', name: 'United Kingdom'},\n    {code: 'US', name: 'Canada'}\n  ];\n\n  genders: Array<string> = [\n    'Male',\n    'Female',\n    'Other'\n  ];\n\n  submitUserForm(value: Object) {\n    console.log(value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/app/user-registration/user-registration.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/dev1/spring_boot_angular4_mysql-frontAngular-master/newApp/bookStore1.0.0/src/main.ts"],"sourceRoot":"webpack:///"}